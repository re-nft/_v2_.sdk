{"version":3,"file":"sdk.cjs.production.min.js","sources":["../src/types.ts","../src/consts.ts","../node_modules/regenerator-runtime/runtime.js","../src/utils.ts","../src/contracts/azrael/utils.ts","../src/contracts/sylvester/utils.ts","../src/contracts/whoopi/utils.ts","../src/interfaces/index.ts","../src/deployments.ts","../src/index.ts"],"sourcesContent":["import { ContractInterface } from '@ethersproject/contracts';\n\nimport {\n  AzraelInterfaceVersions,\n  ResolverInterfaceVersions,\n  SylvesterInterfaceVersions,\n  WhoopiInterfaceVersions,\n} from './contracts';\n\nexport enum EVMNetworkType {\n  ETHEREUM_MAINNET = 'ETHEREUM_MAINNET',\n  POLYGON_MAINNET = 'POLYGON_MAINNET',\n  AVALANCHE_MAINNET = 'AVALANCHE_MAINNET',\n  AVALANCHE_FUJI_TESTNET = 'AVALANCHE_FUJI_TESTNET',\n}\n\nexport type EVMNetworkLike<T extends EVMNetworkType> = {\n  readonly type: T;\n  readonly chainId: number;\n};\n\nexport type Network =\n  // | SolanaNetwork\n  EVMNetworkLike<EVMNetworkType>;\n\nexport enum PaymentToken {\n  SENTINEL = 0, // denotes non-existence of payment token. i.e. default value signifying it hasn't been set\n  WETH = 1,\n  DAI = 2,\n  USDC = 3,\n  USDT = 4,\n  TUSD = 5,\n  ACS = 7, // 6 is reserved for the RENT token when it is released\n}\n\nexport type PaymentTokenDetails = {\n  address: String;\n  scale: number;\n};\n\nexport enum NFTStandard {\n  E721 = 0,\n  E1155 = 1,\n}\n\n// A RenftContractType represents a unique \"style\" of rental functionality:\n//\n// + Azrael: A collateralized rental; an up-front fee is required to prevent a renter from leaving a lender empty-handed.\n// + Sylvester: A non-collateralized rental; have an escrow contract programmatically safeguard the safety of your asset.\n// + Whoopi: A collateral-free rental; very similar to Sylvester, with an addition of whitelisting and reward share\n//           features that facilitate guild-scholar management. Push approach to pay function.\n//\n// These contracts can be redeployed to new addresses and may be slightly modified to include new features\n// and use cases. These are intended to be ideologically backwards-compatible, though their interfaces\n// may not always be; (for example, smart contracts may expect the caller to provide additional arguments).\n//\n// Significantly new styles of rentals we implement in future will necessitate a new RenftContractType.\nexport enum RenftContractType {\n  AZRAEL = 'AZRAEL',\n  SYLVESTER = 'SYLVESTER',\n  WHOOPI = 'WHOOPI',\n  RESOLVER = 'RESOLVER',\n}\n\nexport enum AzraelVersion {\n  V0 = 'V0',\n}\n\nexport enum WhoopiVersion {\n  V0 = 'V0',\n}\n\nexport enum SylvesterVersion {\n  V0 = 'V0',\n  V1 = 'V1',\n}\n\nexport enum ResolverVersion {\n  V0 = 'V0',\n}\n\nexport type RenftContractVersion =\n  | AzraelVersion\n  | WhoopiVersion\n  | SylvesterVersion\n  | ResolverVersion;\n\nexport type AbstractRenftContractDeployment<\n  ContractType extends keyof CreateVersionedContractInterfaceResult,\n  Version extends keyof CreateVersionedContractInterfaceResult[ContractType]\n> = {\n  readonly contractType: ContractType;\n  readonly version: Version;\n  readonly contractAddress: string;\n  readonly network: Network;\n};\n\n// We need to relate contracts to their versions\ntype AbstractVersionedAbis<Version extends RenftContractVersion> = {\n  readonly [key in Version]: ContractInterface;\n};\n\nexport type AzraelAbiVersions = AbstractVersionedAbis<AzraelVersion>;\nexport type SylvesterAbiVersions = AbstractVersionedAbis<SylvesterVersion>;\nexport type WhoopiAbiVersions = AbstractVersionedAbis<WhoopiVersion>;\nexport type ResolverAbiVersions = AbstractVersionedAbis<ResolverVersion>;\n\nexport type ContractAbiVersions = {\n  readonly [RenftContractType.AZRAEL]: AzraelAbiVersions;\n  readonly [RenftContractType.SYLVESTER]: SylvesterAbiVersions;\n  readonly [RenftContractType.WHOOPI]: WhoopiAbiVersions;\n  readonly [RenftContractType.RESOLVER]: ResolverAbiVersions;\n};\n\nexport type RenftAzraelDeployment = AbstractRenftContractDeployment<\n  RenftContractType.AZRAEL,\n  AzraelVersion\n>;\n\nexport type RenftSylvesterDeployment = AbstractRenftContractDeployment<\n  RenftContractType.SYLVESTER,\n  SylvesterVersion\n>;\n\nexport type RenftWhoopiDeployment = AbstractRenftContractDeployment<\n  RenftContractType.WHOOPI,\n  WhoopiVersion\n>;\n\nexport type RenftResolverDeployment = AbstractRenftContractDeployment<\n  RenftContractType.RESOLVER,\n  ResolverVersion\n>;\n\nexport type RenftContractDeployment =\n  | RenftAzraelDeployment\n  | RenftSylvesterDeployment\n  | RenftWhoopiDeployment\n  | RenftResolverDeployment;\n\nexport type RenftContractDeployments = readonly RenftContractDeployment[];\n\nexport type CreateVersionedContractInterfaceResult = {\n  readonly [RenftContractType.AZRAEL]: AzraelInterfaceVersions;\n  readonly [RenftContractType.SYLVESTER]: SylvesterInterfaceVersions;\n  readonly [RenftContractType.WHOOPI]: WhoopiInterfaceVersions;\n  readonly [RenftContractType.RESOLVER]: ResolverInterfaceVersions;\n};\n\n//// TODO: deprecate this\n//export enum RenftContracts {\n//  SYLVESTER = 0,\n//  SYLVESTER_POLYGON = 1,\n//  AZRAEL = 2,\n//  WHOOPI_AVALANCHE = 3,\n//  WHOOPI_FUJI = 4,\n//}\n","import azrael_v0 from './abi/azrael.v0.abi.json';\nimport sylvester_v0 from './abi/sylvester.v0.abi.json';\nimport sylvester_v1 from './abi/sylvester.v1.abi.json';\nimport whoopi_v0 from './abi/whoopi.v0.abi.json';\nimport resolver_v0 from './abi/resolver.v0.abi.json';\n\nimport {\n  AzraelAbiVersions,\n  AzraelVersion,\n  ContractAbiVersions,\n  EVMNetworkType,\n  EVMNetworkLike,\n  PaymentToken,\n  PaymentTokenDetails,\n  RenftContractType,\n  ResolverAbiVersions,\n  ResolverVersion,\n  SylvesterAbiVersions,\n  SylvesterVersion,\n  WhoopiAbiVersions,\n  WhoopiVersion,\n} from './types';\n\nexport const NETWORK_ETHEREUM_MAINNET: EVMNetworkLike<EVMNetworkType.ETHEREUM_MAINNET> = {\n  type: EVMNetworkType.ETHEREUM_MAINNET,\n  chainId: 1,\n};\n\nexport const NETWORK_POLYGON_MAINNET: EVMNetworkLike<EVMNetworkType.POLYGON_MAINNET> = {\n  type: EVMNetworkType.POLYGON_MAINNET,\n  chainId: 137,\n};\n\nexport const NETWORK_AVALANCHE_FUJI_TESTNET: EVMNetworkLike<EVMNetworkType.AVALANCHE_FUJI_TESTNET> = {\n  type: EVMNetworkType.AVALANCHE_FUJI_TESTNET,\n  chainId: 43_113,\n};\n\nexport const NETWORK_AVALANCHE_MAINNET: EVMNetworkLike<EVMNetworkType.AVALANCHE_MAINNET> = {\n  type: EVMNetworkType.AVALANCHE_MAINNET,\n  chainId: 43_114,\n};\n\nexport const AZRAEL_ABI_VERSIONS: AzraelAbiVersions = {\n  [AzraelVersion.V0]: azrael_v0,\n};\n\nexport const SYLVESTER_ABI_VERSIONS: SylvesterAbiVersions = {\n  [SylvesterVersion.V0]: sylvester_v0,\n  [SylvesterVersion.V1]: sylvester_v1,\n};\n\nexport const WHOOPI_ABI_VERSIONS: WhoopiAbiVersions = {\n  [WhoopiVersion.V0]: whoopi_v0,\n};\n\nexport const RESOLVER_ABI_VERSIONS: ResolverAbiVersions = {\n  [ResolverVersion.V0]: resolver_v0,\n};\n\nexport const CONTRACT_ABI_VERSIONS: ContractAbiVersions = {\n  [RenftContractType.AZRAEL]: AZRAEL_ABI_VERSIONS,\n  [RenftContractType.SYLVESTER]: SYLVESTER_ABI_VERSIONS,\n  [RenftContractType.WHOOPI]: WHOOPI_ABI_VERSIONS,\n  [RenftContractType.RESOLVER]: RESOLVER_ABI_VERSIONS,\n};\n\n// TODO: enforce this relationship with ContractTypes\n// * Note, this price does not apply to Whoopi\nexport const MAX_PRICE = 9999.9999;\nexport const NUM_BITS_IN_BYTE = 8;\n\n// Resolver related\nconst SENTINEL: PaymentTokenDetails = {\n  address: '',\n  scale: 0,\n};\nconst ETHEREUM_WETH: PaymentTokenDetails = {\n  address: '0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2',\n  scale: 18,\n};\nconst ETHEREUM_DAI: PaymentTokenDetails = {\n  address: '0x6B175474E89094C44Da98b954EedeAC495271d0F',\n  scale: 18,\n};\nconst ETHEREUM_USDC: PaymentTokenDetails = {\n  address: '0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48',\n  scale: 6,\n};\nconst ETHEREUM_USDT: PaymentTokenDetails = {\n  address: '0xdAC17F958D2ee523a2206206994597C13D831ec7',\n  scale: 6,\n};\nconst ETHEREUM_TUSD: PaymentTokenDetails = {\n  address: '0x0000000000085d4780B73119b644AE5ecd22b376',\n  scale: 18,\n};\nconst POLYGON_WETH: PaymentTokenDetails = {\n  address: '0x7ceB23fD6bC0adD59E62ac25578270cFf1b9f619',\n  scale: 18,\n};\nconst POLYGON_DAI: PaymentTokenDetails = {\n  address: '0x8f3Cf7ad23Cd3CaDbD9735AFf958023239c6A063',\n  scale: 18,\n};\nconst POLYGON_USDC: PaymentTokenDetails = {\n  address: '0x2791Bca1f2de4661ED88A30C99A7a9449Aa84174',\n  scale: 6,\n};\nconst POLYGON_USDT: PaymentTokenDetails = {\n  address: '0xc2132D05D31c914a87C6611C10748AEb04B58e8F',\n  scale: 6,\n};\nconst POLYGON_TUSD: PaymentTokenDetails = {\n  address: '0x2e1AD108fF1D8C782fcBbB89AAd783aC49586756',\n  scale: 18,\n};\nconst FUJI_WETH: PaymentTokenDetails = {\n  address: '0x40E71a970Ff1fbd21A53b4d2dbc102Be0E1d574f', // couldn't find weth on fuji, so this is dai\n  scale: 18,\n};\nconst FUJI_DAI: PaymentTokenDetails = {\n  address: '0x40E71a970Ff1fbd21A53b4d2dbc102Be0E1d574f',\n  scale: 18,\n};\nconst FUJI_USDC: PaymentTokenDetails = {\n  address: '0x43CDA502069B1dFa4f7C1a1625Bc6be47cD0bD88',\n  scale: 6,\n};\nconst FUJI_USDT: PaymentTokenDetails = {\n  address: '0x051DE28a8B5836f678A13d19EE7F8c167b4Ca54D',\n  scale: 6,\n};\nconst FUJI_TUSD: PaymentTokenDetails = {\n  address: '0x051DE28a8B5836f678A13d19EE7F8c167b4Ca54D', // couldn't find tusd on fuji, so this is usdt\n  scale: 6,\n};\nconst FUJI_ACS: PaymentTokenDetails = {\n  address: '0x4a590276DA8E8d660f8ef638464c2D1DF40cEAbA',\n  scale: 18,\n};\nconst AVALANCHE_WETH: PaymentTokenDetails = {\n  address: '0x49D5c2BdFfac6CE2BFdB6640F4F80f226bc10bAB',\n  scale: 18,\n};\nconst AVALANCHE_DAI: PaymentTokenDetails = {\n  address: '0xd586E7F844cEa2F87f50152665BCbc2C279D8d70',\n  scale: 18,\n};\nconst AVALANCHE_USDC: PaymentTokenDetails = {\n  address: '0xA7D7079b0FEaD91F3e65f86E8915Cb59c1a4C664',\n  scale: 6,\n};\nconst AVALANCHE_USDT: PaymentTokenDetails = {\n  address: '0xc7198437980c041c805A1EDcbA50c1Ce5db95118',\n  scale: 6,\n};\nconst AVALANCHE_TUSD: PaymentTokenDetails = {\n  address: '0x1C20E891Bab6b1727d14Da358FAe2984Ed9B59EB',\n  scale: 18,\n};\nconst AVALANCHE_ACS: PaymentTokenDetails = {\n  address: '0x18fC6360E83FE91404d47Ea4400A221dfbBACF06',\n  scale: 18,\n};\n\nexport type PaymentTokenResolvers = {\n  readonly [key in PaymentToken]: PaymentTokenDetails;\n};\n\nexport type NetworkPaymentTokenResolvers = {\n  readonly [key in EVMNetworkType]: PaymentTokenResolvers;\n};\n\nexport const ETHEREUM_MAINNET_PAYMENT_TOKEN_RESOLVERS: PaymentTokenResolvers = {\n  [PaymentToken.SENTINEL]: SENTINEL,\n  [PaymentToken.WETH]: ETHEREUM_WETH,\n  [PaymentToken.DAI]: ETHEREUM_DAI,\n  [PaymentToken.USDC]: ETHEREUM_USDC,\n  [PaymentToken.USDT]: ETHEREUM_USDT,\n  [PaymentToken.TUSD]: ETHEREUM_TUSD,\n  [PaymentToken.ACS]: SENTINEL,\n};\n\nexport const POLYGON_MAINNET_PAYMENT_TOKEN_RESOLVERS: PaymentTokenResolvers = {\n  [PaymentToken.SENTINEL]: SENTINEL,\n  [PaymentToken.WETH]: POLYGON_WETH,\n  [PaymentToken.DAI]: POLYGON_DAI,\n  [PaymentToken.USDC]: POLYGON_USDC,\n  [PaymentToken.USDT]: POLYGON_USDT,\n  [PaymentToken.TUSD]: POLYGON_TUSD,\n  [PaymentToken.ACS]: SENTINEL,\n};\n\nexport const AVALANCHE_FUJI_TESTNET_PAYMENT_TOKEN_RESOLVERS: PaymentTokenResolvers = {\n  [PaymentToken.SENTINEL]: SENTINEL,\n  [PaymentToken.WETH]: FUJI_WETH,\n  [PaymentToken.DAI]: FUJI_DAI,\n  [PaymentToken.USDC]: FUJI_USDC,\n  [PaymentToken.USDT]: FUJI_USDT,\n  [PaymentToken.TUSD]: FUJI_TUSD,\n  [PaymentToken.ACS]: FUJI_ACS,\n};\n\nexport const AVALANCHE_MAINNET_PAYMENT_TOKEN_RESOLVERS: PaymentTokenResolvers = {\n  [PaymentToken.SENTINEL]: SENTINEL,\n  [PaymentToken.WETH]: AVALANCHE_WETH,\n  [PaymentToken.DAI]: AVALANCHE_DAI,\n  [PaymentToken.USDC]: AVALANCHE_USDC,\n  [PaymentToken.USDT]: AVALANCHE_USDT,\n  [PaymentToken.TUSD]: AVALANCHE_TUSD,\n  [PaymentToken.ACS]: AVALANCHE_ACS,\n};\n\n// TODO: need to associate these with the resolver contract instance somehow\nexport const NETWORK_RESOLVERS: NetworkPaymentTokenResolvers = {\n  [EVMNetworkType.ETHEREUM_MAINNET]: ETHEREUM_MAINNET_PAYMENT_TOKEN_RESOLVERS,\n  [EVMNetworkType.POLYGON_MAINNET]: POLYGON_MAINNET_PAYMENT_TOKEN_RESOLVERS,\n  [EVMNetworkType.AVALANCHE_FUJI_TESTNET]: AVALANCHE_FUJI_TESTNET_PAYMENT_TOKEN_RESOLVERS,\n  [EVMNetworkType.AVALANCHE_MAINNET]: AVALANCHE_MAINNET_PAYMENT_TOKEN_RESOLVERS,\n};\n\n//// @deprecated\n//export const Resolvers: {\n//  readonly [key in RenftContracts]: PaymentTokenResolvers;\n//} = {\n//  [RenftContracts.SYLVESTER]: NETWORK_RESOLVERS[EVMNetworkType.ETHEREUM_MAINNET],\n//  [RenftContracts.SYLVESTER_POLYGON]: NETWORK_RESOLVERS[EVMNetworkType.POLYGON_MAINNET],\n//  [RenftContracts.AZRAEL]: NETWORK_RESOLVERS[EVMNetworkType.ETHEREUM_MAINNET],\n//  [RenftContracts.WHOOPI_AVALANCHE]: NETWORK_RESOLVERS[EVMNetworkType.AVALANCHE_MAINNET],\n//  [RenftContracts.WHOOPI_FUJI]: NETWORK_RESOLVERS[EVMNetworkType.AVALANCHE_FUJI_TESTNET],\n//};\n","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nvar runtime = (function (exports) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  function define(obj, key, value) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n    return obj[key];\n  }\n  try {\n    // IE 8 has a broken Object.defineProperty that only works on DOM objects.\n    define({}, \"\");\n  } catch (err) {\n    define = function(obj, key, value) {\n      return obj[key] = value;\n    };\n  }\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  exports.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  IteratorPrototype[iteratorSymbol] = function () {\n    return this;\n  };\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;\n  GeneratorFunctionPrototype.constructor = GeneratorFunction;\n  GeneratorFunction.displayName = define(\n    GeneratorFunctionPrototype,\n    toStringTagSymbol,\n    \"GeneratorFunction\"\n  );\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      define(prototype, method, function(arg) {\n        return this._invoke(method, arg);\n      });\n    });\n  }\n\n  exports.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  exports.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      define(genFun, toStringTagSymbol, \"GeneratorFunction\");\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  exports.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator, PromiseImpl) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return PromiseImpl.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return PromiseImpl.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function(error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new PromiseImpl(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  AsyncIterator.prototype[asyncIteratorSymbol] = function () {\n    return this;\n  };\n  exports.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  exports.async = function(innerFn, outerFn, self, tryLocsList, PromiseImpl) {\n    if (PromiseImpl === void 0) PromiseImpl = Promise;\n\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList),\n      PromiseImpl\n    );\n\n    return exports.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        // Note: [\"return\"] must be used for ES3 parsing compatibility.\n        if (delegate.iterator[\"return\"]) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  define(Gp, toStringTagSymbol, \"Generator\");\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  Gp[iteratorSymbol] = function() {\n    return this;\n  };\n\n  Gp.toString = function() {\n    return \"[object Generator]\";\n  };\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  exports.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  exports.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n\n  // Regardless of whether this script is executing as a CommonJS module\n  // or not, return the runtime object so that we can declare the variable\n  // regeneratorRuntime in the outer scope, which allows this module to be\n  // injected easily by `bin/regenerator --include-runtime script.js`.\n  return exports;\n\n}(\n  // If this script is executing as a CommonJS module, use module.exports\n  // as the regeneratorRuntime namespace. Otherwise create a new empty\n  // object. Either way, the resulting object will be used to initialize\n  // the regeneratorRuntime variable at the top of this file.\n  typeof module === \"object\" ? module.exports : {}\n));\n\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  // This module should not be running in strict mode, so the above\n  // assignment should always work unless something is misconfigured. Just\n  // in case runtime.js accidentally runs in strict mode, we can escape\n  // strict mode using a global Function call. This could conceivably fail\n  // if a Content Security Policy forbids using Function, but in that case\n  // the proper solution is to fix the accidental strict mode problem. If\n  // you've misconfigured your bundler to force strict mode and applied a\n  // CSP to forbid Function, and you're not willing to fix either of those\n  // problems, please detail your unique predicament in a GitHub issue.\n  Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n}\n","import {\n  BigNumber,\n  BigNumberish,\n  formatFixed,\n  parseFixed,\n} from '@ethersproject/bignumber';\n\nimport { EVMNetworkType, NFTStandard, PaymentToken } from './types';\nimport { MAX_PRICE, NETWORK_RESOLVERS, NUM_BITS_IN_BYTE } from './consts';\n\n// consts that predominantly pertain to this file\nconst BITSIZE_MAX_VALUE = 32;\nconst HALF_BITSIZE = 16;\n\nconst PRICE_BITSIZE = 32;\n\n/**\n * hexchar is 0 to 15 which is 2 ** 4 - 1.\n * This means that hexchar (aka nibble) is half a byte,\n * since byte is 8 bits. This function converts number\n * of bytes to number of nibbles.\n *\n * e.g. 2 bytes is 4 nibbles\n *\n * @param byteCount\n * @returns number of nibbles that represent the byteCount bytes\n */\nexport const bytesToNibbles = (byteCount: number) => {\n  if (typeof byteCount != 'number') throw new Error('only numbers supported');\n\n  if (byteCount < 1) throw new Error('invalid byteCount');\n\n  return byteCount * 2;\n};\n\n/**\n * (21.42, 32) -> 0x0015002A\n *\n * (1.2, 32)   -> 0x00010002\n *\n * Notice how the whole decimal part is reprsented by the first 4 nibbles,\n * whereas the decimal part is represented by the second part, i.e. the\n * last 4 nibbles\n *\n * @param number\n * @param bitsize\n * @returns number's padded (of bitsize total length) hex format\n */\nexport const toPaddedHex = (number: number, bitsize: number) => {\n  // in node.js this function fails for bitsize above 32 bits\n  if (bitsize > BITSIZE_MAX_VALUE)\n    throw new Error(\n      `bitsize ${bitsize} above maximum value ${BITSIZE_MAX_VALUE}`\n    );\n  // conversion to unsigned form based on\n  if (number < 0) throw new Error('unsigned number not supported');\n\n  // 8 bits = 1 byteCount; 16 bits = 2 byteCount, ...\n  const byteCount = Math.ceil(bitsize / NUM_BITS_IN_BYTE);\n\n  // shifting 0 bits removes decimals\n  // toString(16) converts into hex\n  // .padStart(byteCount * 2, \"0\") adds byte\n  return (\n    '0x' +\n    (number >>> 0)\n      .toString(16)\n      .toUpperCase()\n      // 1 nibble = 4 bits. 1 byte = 2 nibbles\n      .padStart(bytesToNibbles(byteCount), '0')\n  );\n};\n\nconst scaleDecimal = (num: string) => {\n  const numLen = num.length;\n  const maxLen = 4;\n  for (let i = 0; i < maxLen - numLen; i++) {\n    num = num + '0';\n  }\n  return Number(num);\n};\n\n/**\n * Converts a number into the format that is acceptable by the ReNFT contract.\n * TLDR; to fit a single storage slot in the ReNFT contract, we split the whole\n * and decimal parts of a number to only have maximum 4 digits. That means, the\n * maximum price is 9999.9999. If more decimals are supplied, they are truncated.\n * If price exceeds the maximum whole part, this throws.\n * @param price value to pack\n * @returns price format that is acceptable by ReNFT contract\n */\nexport const packPrice = (price: string | number) => {\n  if (price > MAX_PRICE) throw new Error(`supplied price exceeds ${MAX_PRICE}`);\n\n  const parts = price.toString().split('.');\n  const whole = Number(parts[0]);\n  if (whole < 0) throw new Error(\"can't pack negative price\");\n  const wholeHex = toPaddedHex(Number(whole), HALF_BITSIZE);\n\n  if (parts.length === 1) return wholeHex.concat('0000');\n  if (parts.length !== 2) throw new Error('price packing issue');\n\n  let decimal = scaleDecimal(parts[1].slice(0, 4));\n\n  return wholeHex.concat(toPaddedHex(Number(decimal), HALF_BITSIZE).slice(2));\n};\n\nconst sameLength = <T>(a: T[], b: T[]) => a.length === b.length;\n\nconst validateSameLength = (...args: any[]) => {\n  let prev: any = args[0];\n  for (const curr of args) {\n    if (!curr) continue;\n    if (!sameLength(prev, curr)) throw new Error('args length variable');\n    prev = curr;\n  }\n  return true;\n};\n\nconst decimalToPaddedHexString = (number: number, bitsize: number): string => {\n  const byteCount = Math.ceil(bitsize / 8);\n  const maxBinValue = Math.pow(2, bitsize) - 1;\n  if (bitsize > 32) throw new Error('number above maximum value');\n  if (number < 0) number = maxBinValue + number + 1;\n  return (\n    '0x' +\n    (number >>> 0)\n      .toString(16)\n      .toUpperCase()\n      .padStart(byteCount * 2, '0')\n  );\n};\n\n/**\n * To save as much gas as possible, we have decided to pack the rental\n * price tightly in the Lending struct in our contract. For this purpose,\n * we have decided to use 4 bytes to express the price. Leading two bytes\n * are used to signify the whole part of the price and the last two bytes\n * are used to signify the decimal part of the price. This function deals\n * with converting the packed price back to the human readable price.\n * @param price packed price to convert to human readable price\n */\nexport const unpackPrice = (price: BigNumberish) => {\n  // price is from 1 to 4294967295. i.e. from 0x00000001 to 0xffffffff\n  const numHex = decimalToPaddedHexString(Number(price), PRICE_BITSIZE).slice(\n    2\n  );\n  let whole = parseInt(numHex.slice(0, 4), 16);\n  let decimal = parseInt(numHex.slice(4), 16);\n  if (whole > 9999) whole = 9999;\n  if (decimal > 9999) decimal = 9999;\n\n  let decimalStr = decimal.toString();\n  const decimalLen = decimalStr.length;\n  const maxLen = 4;\n  for (let i = 0; i < maxLen - decimalLen; i++) {\n    decimalStr = '0' + decimalStr;\n  }\n\n  return parseFloat(`${whole}.${decimalStr}`);\n};\n\ntype IObjectKeysValues = string[] | boolean[] | number[] | PaymentToken[];\n\ninterface IObjectKeys {\n  [key: string]: IObjectKeysValues | undefined;\n}\n\ninterface PrepareBatch extends IObjectKeys {\n  nftStandard?: NFTStandard[];\n  nftAddress: string[];\n  tokenID: string[];\n  amount?: number[];\n  maxRentDuration?: number[];\n  dailyRentPrice?: string[];\n  nftPrice?: string[];\n  paymentToken?: PaymentToken[];\n  rentDuration?: number[];\n  lendingID?: string[];\n  rentingID?: string[];\n  rentAmount?: string[];\n}\n\n/**\n * Our contracts take arrays of NFT addresses, their token ids, and other\n * relevant informatino for lending / renting. Contract assumes a specific\n * ordering for these. That is how we achieve minimal gas usage. This function\n * facilitates that ordering. In a nutshell, it puts all the ERC721s together,\n * followed by ERC1155s, which also sit next to each other in the sorted array.\n * This helps our contracts with calling the ERC1155's bundle transfer, and\n * that is yet another gas saving trick.\n *\n * To spend as little gas as possible, arguments must follow a particular format\n * when passed to the contract. This function prepares whatever inputs you want\n * to send, and returns the inputs in an optimal format.\n *\n * This algorithm's time complexity is pretty awful. But, it will never run on\n * large arrays, so it doesn't really matter.\n * @param args arguments that the client is intending to call the contracts\n * with.\n */\nexport const prepareBatch = (args: PrepareBatch) => {\n  if (args.nftAddress.length <= 1) return args;\n  validateSameLength(args);\n  let preparedBatch: PrepareBatch = { nftAddress: [], tokenID: [] };\n\n  // input:  ['a', 'b', 'a', 'c']\n  // output: [0, 2, 1, 3]\n  const sortIndices = (nft: string[]): number[] => {\n    const comp = (a: string, b: string) => (a < b ? -1 : a > b ? 1 : 0);\n    const indices = new Array(nft.length).fill(0).map((_, i) => i);\n    return indices.sort((a, b) => comp(nft[a], nft[b]));\n  };\n\n  const sortWithIndices = (items: any[], indices: number[]) => {\n    return indices.map(i => items[i]);\n  };\n\n  const indices = sortIndices(args.nftAddress);\n\n  Object.keys(args).forEach(key => {\n    //@ts-ignore\n    preparedBatch[key] = sortWithIndices(args[key], indices);\n  });\n\n  return preparedBatch;\n};\n\n// TODO: deprecate the usage of these in front & api. People should use\n// parseFixed directly.\n// TODO: haven't tested the Bytes conversion here. Do **NOT** use with Bytes\nexport const toWhoopiScaledAmount = (\n  v: BigNumberish,\n  c: EVMNetworkType,\n  t: PaymentToken\n): BigNumber => {\n  if (t === PaymentToken.SENTINEL)\n    throw new TypeError('Invalid payment token. Non-sentinels supported only.');\n\n  const { [c]: resolver } = NETWORK_RESOLVERS;\n\n  return parseFixed(String(v), resolver[t].scale);\n};\n\n// TODO: deprecate the usage of these in front & api. People should use\n// formatFixed directly.\n// TODO: haven't tested the Bytes conversion here. Do **NOT** use with Bytes\nexport const fromWhoopiScaledAmount = (\n  v: BigNumberish,\n  c: EVMNetworkType.AVALANCHE_MAINNET | EVMNetworkType.AVALANCHE_FUJI_TESTNET,\n  t: PaymentToken\n): string => {\n  if (t === PaymentToken.SENTINEL)\n    throw new TypeError('Invalid payment token. Non-sentinels supported only.');\n\n  const { [c]: resolver } = NETWORK_RESOLVERS;\n\n  return formatFixed(v, resolver[t].scale);\n};\n","import { Contract, ContractTransaction } from '@ethersproject/contracts';\n\nimport { PaymentToken } from '../../types';\nimport { packPrice, prepareBatch } from '../../utils';\n\nimport {\n  AzraelV0ClaimCollateralFunction,\n  AzraelV0LendFunction,\n  AzraelV0RentFunction,\n  AzraelV0ReturnItFunction,\n  AzraelV0StopLendingFunction,\n} from './types';\n\nexport const createAzraelV0LendThunk = (\n  contract: Contract\n): AzraelV0LendFunction => async (\n  nftAddress: string[],\n  tokenID: string[],\n  amount: number[],\n  maxRentDuration: number[],\n  dailyRentPrice: number[],\n  nftPrice: number[],\n  paymentToken: PaymentToken[],\n  options?: any\n): Promise<ContractTransaction> => {\n  const args = prepareBatch({\n    nftAddress: nftAddress.map(String),\n    tokenID: tokenID.map(String),\n    amount: amount.map(Number),\n    maxRentDuration: maxRentDuration.map(Number),\n    dailyRentPrice: dailyRentPrice.map(x => packPrice(Number(x).toString())),\n    nftPrice: nftPrice.map(x => packPrice(Number(x).toString())),\n    paymentToken,\n  });\n  return await contract.lend(\n    args.nftAddress,\n    args.tokenID,\n    args.amount,\n    args.maxRentDuration,\n    args.dailyRentPrice,\n    args.nftPrice,\n    args.paymentToken,\n    options ?? []\n  );\n};\n\nexport const createAzraelV0RentThunk = (\n  contract: Contract\n): AzraelV0RentFunction => async (\n  nftAddress: string[],\n  tokenID: string[],\n  lendingID: string[],\n  rentDuration: number[],\n  options?: any\n): Promise<ContractTransaction> => {\n  const args = prepareBatch({\n    nftAddress: nftAddress.map(String),\n    tokenID: tokenID.map(String),\n    lendingID: lendingID.map(String),\n    rentDuration: rentDuration.map(Number),\n  });\n  return await contract.rent(\n    args.nftAddress,\n    args.tokenID,\n    args.lendingID,\n    args.rentDuration,\n    options ?? []\n  );\n};\n\nexport const createAzraelV0ReturnItThunk = (\n  contract: Contract\n): AzraelV0ReturnItFunction => async (\n  nftAddress: string[],\n  tokenID: string[],\n  lendingID: string[],\n  options?: any\n): Promise<ContractTransaction> => {\n  const args = prepareBatch({\n    nftAddress: nftAddress.map(String),\n    tokenID: tokenID.map(String),\n    lendingID: lendingID.map(String),\n  });\n  return await contract.returnIt(\n    args.nftAddress,\n    args.tokenID,\n    args.lendingID,\n    options ?? []\n  );\n};\n\nexport const createAzraelV0ClaimCollateralThunk = (\n  contract: Contract\n): AzraelV0ClaimCollateralFunction => async (\n  nftAddress: string[],\n  tokenID: string[],\n  lendingID: string[],\n  options?: any\n): Promise<ContractTransaction> => {\n  const args = prepareBatch({\n    nftAddress: nftAddress.map(String),\n    tokenID: tokenID.map(String),\n    lendingID: lendingID.map(String),\n  });\n  return await contract.claimCollateral(\n    args.nftAddress,\n    args.tokenID,\n    args.lendingID,\n    options ?? []\n  );\n};\n\nexport const createAzraelV0StopLendingThunk = (\n  contract: Contract\n): AzraelV0StopLendingFunction => async (\n  nftAddress: string[],\n  tokenID: string[],\n  lendingID: string[],\n  options?: any\n): Promise<ContractTransaction> => {\n  const args = prepareBatch({\n    nftAddress: nftAddress.map(String),\n    tokenID: tokenID.map(String),\n    lendingID: lendingID.map(String),\n  });\n  return await contract.stopLending(\n    args.nftAddress,\n    args.tokenID,\n    args.lendingID,\n    options ?? []\n  );\n};\n","import { Contract, ContractTransaction } from '@ethersproject/contracts';\n\nimport { NFTStandard, PaymentToken } from '../../types';\nimport { packPrice, prepareBatch } from '../../utils';\n\nimport {\n  SylvesterV0ClaimCollateralFunction,\n  SylvesterV0LendFunction,\n  SylvesterV0RentFunction,\n  SylvesterV0ReturnItFunction,\n  SylvesterV0StopLendingFunction,\n} from './types';\n\nexport const createSylvesterV0LendThunk = (\n  contract: Contract\n): SylvesterV0LendFunction => async (\n  nftStandard: NFTStandard[],\n  nftAddress: string[],\n  tokenID: string[],\n  amount: number[],\n  maxRentDuration: number[],\n  dailyRentPrice: number[],\n  paymentToken: PaymentToken[],\n  options?: any\n): Promise<ContractTransaction> => {\n  const args = prepareBatch({\n    nftStandard,\n    nftAddress: nftAddress.map(String),\n    tokenID: tokenID.map(String),\n    amount: amount.map(Number),\n    maxRentDuration: maxRentDuration.map(Number),\n    dailyRentPrice: dailyRentPrice.map(x => packPrice(Number(x).toString())),\n    paymentToken,\n  });\n  return await contract.lend(\n    args.nftStandard,\n    args.nftAddress,\n    args.tokenID,\n    args.amount,\n    args.maxRentDuration,\n    args.dailyRentPrice,\n    args.paymentToken,\n    options ?? []\n  );\n};\n\nexport const createSylvesterV1LendThunk = (\n  contract: Contract\n): SylvesterV0LendFunction => async (\n  nftStandard: NFTStandard[],\n  nftAddress: string[],\n  tokenID: string[],\n  amount: number[],\n  maxRentDuration: number[],\n  dailyRentPrice: number[],\n  paymentToken: PaymentToken[],\n  willAutoRenew: boolean[],\n  options?: any\n): Promise<ContractTransaction> => {\n  const args = prepareBatch({\n    nftStandard,\n    nftAddress: nftAddress.map(String),\n    tokenID: tokenID.map(String),\n    amount: amount.map(Number),\n    maxRentDuration: maxRentDuration.map(Number),\n    dailyRentPrice: dailyRentPrice.map(x => packPrice(Number(x).toString())),\n    paymentToken,\n    willAutoRenew: willAutoRenew.map(x => (x ? 1 : 0)),\n  });\n  return await contract.lend(\n    args.nftStandard,\n    args.nftAddress,\n    args.tokenID,\n    args.amount,\n    args.maxRentDuration,\n    args.dailyRentPrice,\n    args.paymentToken,\n    args.willAutoRenew,\n    options ?? []\n  );\n};\n\nexport const createSylvesterV0RentThunk = (\n  contract: Contract\n): SylvesterV0RentFunction => async (\n  nftStandard: NFTStandard[],\n  nftAddress: string[],\n  tokenID: string[],\n  lendingID: string[],\n  rentDuration: number[],\n  rentAmount: string[],\n  options?: any\n): Promise<ContractTransaction> => {\n  const args = prepareBatch({\n    nftStandard: nftStandard.map(Number),\n    nftAddress: nftAddress.map(String),\n    tokenID: tokenID.map(String),\n    lendingID: lendingID.map(String),\n    rentDuration: rentDuration.map(Number),\n    rentAmount: rentAmount.map(String),\n  });\n  return await contract.rent(\n    args.nftStandard,\n    args.nftAddress,\n    args.tokenID,\n    args.lendingID,\n    args.rentDuration,\n    args.rentAmount,\n    options ?? []\n  );\n};\n\nexport const createSylvesterV0ReturnItThunk = (\n  contract: Contract\n): SylvesterV0ReturnItFunction => async (\n  nftStandard: NFTStandard[],\n  nftAddress: string[],\n  tokenID: string[],\n  lendingID: string[],\n  rentingID: string[],\n  options?: any\n): Promise<ContractTransaction> => {\n  const args = prepareBatch({\n    nftStandard: nftStandard.map(Number),\n    nftAddress: nftAddress.map(String),\n    tokenID: tokenID.map(String),\n    lendingID: lendingID.map(String),\n    rentingID: rentingID.map(String),\n  });\n  return await contract.stopRent(\n    args.nftStandard,\n    args.nftAddress,\n    args.tokenID,\n    args.lendingID,\n    args.rentingID,\n    options ?? []\n  );\n};\n\nexport const createSylvesterV0ClaimCollateralThunk = (\n  contract: Contract\n): SylvesterV0ClaimCollateralFunction => async (\n  nftStandard: NFTStandard[],\n  nftAddress: string[],\n  tokenID: string[],\n  lendingID: string[],\n  rentingID: string[],\n  options?: any\n): Promise<ContractTransaction> => {\n  const args = prepareBatch({\n    nftStandard: nftStandard.map(Number),\n    nftAddress: nftAddress.map(String),\n    tokenID: tokenID.map(String),\n    lendingID: lendingID.map(String),\n    rentingID: rentingID.map(String),\n  });\n  return await contract.claimRent(\n    args.nftStandard,\n    args.nftAddress,\n    args.tokenID,\n    args.lendingID,\n    args.rentingID,\n    options ?? []\n  );\n};\n\nexport const createSylvesterV0StopLendingThunk = (\n  contract: Contract\n): SylvesterV0StopLendingFunction => async (\n  nftStandard: NFTStandard[],\n  nftAddress: string[],\n  tokenID: string[],\n  lendingID: string[],\n  options?: any\n): Promise<ContractTransaction> => {\n  const args = prepareBatch({\n    nftStandard: nftStandard.map(Number),\n    nftAddress: nftAddress.map(String),\n    tokenID: tokenID.map(String),\n    lendingID: lendingID.map(String),\n  });\n  return await contract.stopLend(\n    args.nftStandard,\n    args.nftAddress,\n    args.tokenID,\n    args.lendingID,\n    options ?? []\n  );\n};\n","import { Contract, ContractTransaction } from '@ethersproject/contracts';\n\nimport { EVMNetworkType, PaymentToken } from '../../types';\nimport { toWhoopiScaledAmount } from '../../utils';\n\nimport {\n  WhoopiV0LendFunction,\n  WhoopiV0PayFunction,\n  WhoopiV0RentFunction,\n  WhoopiV0StopLendingFunction,\n  WhoopiV0StopRentFunction,\n} from './types';\n\nexport const createWhoopiV0LendThunk = (\n  contract: Contract,\n  network: EVMNetworkType\n): WhoopiV0LendFunction => async (\n  nftAddress: string,\n  tokenId: string[],\n  upfrontRentFees: string[],\n  revShareBeneficiaries: string[][],\n  revSharePortions: number[][],\n  maxRentDurations: number[],\n  paymentTokens: PaymentToken[],\n  allowedRenters?: string[][],\n  options?: any\n): Promise<ContractTransaction> => {\n  let revShares = [];\n\n  for (let i = 0; i < revShareBeneficiaries.length; i++) {\n    revShares.push([revShareBeneficiaries[i], revSharePortions[i]]);\n  }\n\n  let allowRenters = [];\n\n  if (allowedRenters) {\n    for (let i = 0; i < allowedRenters.length; i++) {\n      allowRenters.push([allowedRenters[i]]);\n    }\n  } else {\n    for (let i = 0; i < tokenId.length; i++) {\n      // outer array is for the AllowedRenters struct,\n      // and the inner is for its contents: allowedRenters\n      // ! we need this layering because graphprotocol cannot\n      // ! generate types for 2d arrays. So you have to wrap\n      // ! the outer array into a struct.\n      allowRenters.push([[]]);\n    }\n  }\n  return await contract.lend(\n    [nftAddress, tokenId, Array(tokenId.length).fill('0')],\n    upfrontRentFees.map((x, i) =>\n      toWhoopiScaledAmount(x, network, paymentTokens[i])\n    ) ?? [],\n    allowRenters,\n    revShares,\n    maxRentDurations,\n    paymentTokens,\n    options ?? []\n  );\n};\n\nexport const createWhoopiV0RentThunk = (\n  contract: Contract\n): WhoopiV0RentFunction => async (\n  nftAddress: string,\n  tokenId: string[],\n  lendingId: string[],\n  rentDurations: number[],\n  options?: any\n): Promise<ContractTransaction> => {\n  return await contract.rent(\n    [nftAddress, tokenId, lendingId],\n    rentDurations,\n    options ?? []\n  );\n};\n\nexport const createWhoopiV0StopRentThunk = (\n  contract: Contract\n): WhoopiV0StopRentFunction => async (\n  nftAddress: string,\n  tokenId: string[],\n  lendingId: string[],\n  options?: any\n) => {\n  return await contract.stopRent(nftAddress, tokenId, lendingId, options ?? []);\n};\n\nexport const createWhoopiV0StopLendingThunk = (\n  contract: Contract\n): WhoopiV0StopLendingFunction => async (\n  nftAddress: string,\n  tokenId: string[],\n  lendingId: string[],\n  options?: any\n): Promise<ContractTransaction> => {\n  return await contract.stopLend(\n    [nftAddress, tokenId, lendingId],\n    options ?? []\n  );\n};\n\nexport const createWhoopiV0PayThunk = (\n  contract: Contract\n): WhoopiV0PayFunction => async (\n  nftAddress: string,\n  tokenId: string[],\n  lendingId: string[],\n  renterAddress: string[],\n  amountToPay: string[],\n  options?: any\n): Promise<ContractTransaction> => {\n  return await contract.pay(\n    [nftAddress, tokenId, lendingId],\n    renterAddress,\n    amountToPay,\n    options ?? []\n  );\n};\n","import { Contract } from '@ethersproject/contracts';\n\nimport {\n  AzraelVersion,\n  CreateVersionedContractInterfaceResult,\n  EVMNetworkType,\n  RenftContractType,\n  ResolverVersion,\n  SylvesterVersion,\n  WhoopiVersion,\n} from '../types';\n\nimport {\n  AzraelInterfaceVersions,\n  createAzraelV0ClaimCollateralThunk,\n  createAzraelV0LendThunk,\n  createAzraelV0RentThunk,\n  createAzraelV0ReturnItThunk,\n  createAzraelV0StopLendingThunk,\n  createSylvesterV0ClaimCollateralThunk,\n  createSylvesterV0LendThunk,\n  createSylvesterV0RentThunk,\n  createSylvesterV0ReturnItThunk,\n  createSylvesterV0StopLendingThunk,\n  SylvesterInterfaceVersions,\n  createWhoopiV0LendThunk,\n  createWhoopiV0PayThunk,\n  createWhoopiV0RentThunk,\n  createWhoopiV0StopLendingThunk,\n  createWhoopiV0StopRentThunk,\n  WhoopiInterfaceVersions,\n  ResolverInterfaceVersions,\n  createSylvesterV1LendThunk,\n} from '../contracts';\n\nconst createAzraelInterfaceVersionsThunk = (\n  contract: Contract\n): AzraelInterfaceVersions => ({\n  [AzraelVersion.V0]: {\n    lend: createAzraelV0LendThunk(contract),\n    rent: createAzraelV0RentThunk(contract),\n    returnIt: createAzraelV0ReturnItThunk(contract),\n    claimCollateral: createAzraelV0ClaimCollateralThunk(contract),\n    stopLending: createAzraelV0StopLendingThunk(contract),\n  },\n});\n\nconst createSylvesterInterfaceVersionsThunk = (\n  contract: Contract\n): SylvesterInterfaceVersions => ({\n  [SylvesterVersion.V0]: {\n    lend: createSylvesterV0LendThunk(contract),\n    rent: createSylvesterV0RentThunk(contract),\n    returnIt: createSylvesterV0ReturnItThunk(contract),\n    claimCollateral: createSylvesterV0ClaimCollateralThunk(contract),\n    stopLending: createSylvesterV0StopLendingThunk(contract),\n  },\n  [SylvesterVersion.V1]: {\n    lend: createSylvesterV1LendThunk(contract),\n    rent: createSylvesterV0RentThunk(contract),\n    returnIt: createSylvesterV0ReturnItThunk(contract),\n    claimCollateral: createSylvesterV0ClaimCollateralThunk(contract),\n    stopLending: createSylvesterV0StopLendingThunk(contract),\n  },\n});\n\nconst createWhoopiInterfaceVersionsThunk = (\n  contract: Contract,\n  network: EVMNetworkType\n): WhoopiInterfaceVersions => ({\n  [WhoopiVersion.V0]: {\n    lend: createWhoopiV0LendThunk(contract, network),\n    rent: createWhoopiV0RentThunk(contract),\n    stopRent: createWhoopiV0StopRentThunk(contract),\n    stopLending: createWhoopiV0StopLendingThunk(contract),\n    pay: createWhoopiV0PayThunk(contract),\n  },\n});\n\nconst createResolverInterfaceVersionsThunk = (): ResolverInterfaceVersions => ({\n  // TODO: What arguments to use here?\n  [ResolverVersion.V0]: {},\n});\n\nexport const createInterfaceVersions = (\n  contract: Contract,\n  network: EVMNetworkType\n): CreateVersionedContractInterfaceResult => ({\n  [RenftContractType.AZRAEL]: createAzraelInterfaceVersionsThunk(contract),\n  [RenftContractType.SYLVESTER]: createSylvesterInterfaceVersionsThunk(\n    contract\n  ),\n  [RenftContractType.WHOOPI]: createWhoopiInterfaceVersionsThunk(\n    contract,\n    network\n  ),\n  [RenftContractType.RESOLVER]: createResolverInterfaceVersionsThunk(),\n});\n","import { Contract, ContractInterface } from '@ethersproject/contracts';\nimport { Signer } from '@ethersproject/abstract-signer';\nimport isEqual from 'react-fast-compare';\n\nimport {\n  CONTRACT_ABI_VERSIONS,\n  NETWORK_AVALANCHE_FUJI_TESTNET,\n  NETWORK_AVALANCHE_MAINNET,\n  NETWORK_ETHEREUM_MAINNET,\n  NETWORK_POLYGON_MAINNET,\n} from './consts';\nimport { createInterfaceVersions } from './interfaces';\nimport {\n  AbstractRenftContractDeployment,\n  AzraelVersion,\n  RenftContractDeployment,\n  RenftContractDeployments,\n  RenftContractType,\n  ResolverVersion,\n  SylvesterVersion,\n  WhoopiVersion,\n  CreateVersionedContractInterfaceResult,\n} from './types';\n\nexport const DEPLOYMENT_AZRAEL_ETHEREUM_MAINNET_V0 = {\n  contractAddress: '0x94d8f036a0fbc216bb532d33bdf6564157af0cd7',\n  network: NETWORK_ETHEREUM_MAINNET,\n  contractType: RenftContractType.AZRAEL,\n  version: AzraelVersion.V0,\n} as const;\n\nexport const DEPLOYMENT_SYLVESTER_ETHEREUM_MAINNET_V0 = {\n  contractAddress: '0xa8D3F65b6E2922fED1430b77aC2b557e1fa8DA4a',\n  network: NETWORK_ETHEREUM_MAINNET,\n  contractType: RenftContractType.SYLVESTER,\n  version: SylvesterVersion.V0,\n} as const;\n\nexport const DEPLOYMENT_SYLVESTER_POLYGON_MAINNET_V0 = {\n  contractAddress: '0xfA06cFE34C85Ec6b6D29A6a99806cC68BA0018Fe',\n  network: NETWORK_POLYGON_MAINNET,\n  contractType: RenftContractType.SYLVESTER,\n  version: SylvesterVersion.V0,\n} as const;\n\nexport const DEPLOYMENT_SYLVESTER_POLYGON_MAINNET_V1 = {\n  contractAddress: '0x4e52b73aa28b7ff84d88ea3a90c0668f46043450',\n  network: NETWORK_POLYGON_MAINNET,\n  contractType: RenftContractType.SYLVESTER,\n  version: SylvesterVersion.V1,\n} as const;\n\nexport const DEPLOYMENT_WHOOPI_AVALANCHE_FUJI_TESTNET_V0 = {\n  contractAddress: '0x42816FA3cB0aDc3fcAdED3109323c0Bc19215084',\n  network: NETWORK_AVALANCHE_FUJI_TESTNET,\n  contractType: RenftContractType.WHOOPI,\n  version: WhoopiVersion.V0,\n} as const;\n\nexport const DEPLOYMENT_WHOOPI_AVALANCHE_MAINNET_V0 = {\n  contractAddress: '0x6Ee495ecEd3A0255057667FF2685e53f54A19A65',\n  network: NETWORK_AVALANCHE_MAINNET,\n  contractType: RenftContractType.WHOOPI,\n  version: WhoopiVersion.V0,\n} as const;\n\nexport const DEPLOYMENT_RESOLVER_ETHEREUM_MAINNET_V0 = {\n  contractAddress: '0x945e589a4715d1915e6fe14f08e4887bc4019341',\n  network: NETWORK_ETHEREUM_MAINNET,\n  contractType: RenftContractType.RESOLVER,\n  version: ResolverVersion.V0,\n} as const;\n\nexport const DEPLOYMENT_RESOLVER_POLYGON_MAINNET_V0 = {\n  contractAddress: '0x6884d88Ce56C5C93F46eE23684eBA8628c90B518',\n  network: NETWORK_POLYGON_MAINNET,\n  contractType: RenftContractType.RESOLVER,\n  version: ResolverVersion.V0,\n} as const;\n\n// TODO: we need to enforce this association more strongly\nexport const DEPLOYMENT_RESOLVER_POLYGON_MAINNET_V0_FOR_DEPLOYMENT_SYLVESTER_POLYGON_MAINNET_V1 = {\n  contractAddress: '0x3ddc85bb768a11b0125f4ee71cfea54e54653366',\n  network: NETWORK_POLYGON_MAINNET,\n  contractType: RenftContractType.RESOLVER,\n  version: ResolverVersion.V0,\n} as const;\n\nexport const DEPLOYMENT_RESOLVER_AVALANCHE_FUJI_TESTNET_V0 = {\n  contractAddress: '0x23F7F8B03BAF01D5124255fE240E81BbBd3AEc0D',\n  network: NETWORK_AVALANCHE_FUJI_TESTNET,\n  contractType: RenftContractType.RESOLVER,\n  version: ResolverVersion.V0,\n} as const;\n\nexport const DEPLOYMENT_RESOLVER_AVALANCHE_MAINNET_V0 = {\n  contractAddress: '0xEBFd584AAC21dfEFF02c3d4f308B0962610a028A',\n  network: NETWORK_AVALANCHE_MAINNET,\n  contractType: RenftContractType.RESOLVER,\n  version: ResolverVersion.V0,\n} as const;\n\nexport const RENFT_CONTRACT_DEPLOYMENTS: RenftContractDeployments = [\n  DEPLOYMENT_AZRAEL_ETHEREUM_MAINNET_V0,\n  DEPLOYMENT_SYLVESTER_ETHEREUM_MAINNET_V0,\n  DEPLOYMENT_SYLVESTER_POLYGON_MAINNET_V0,\n  DEPLOYMENT_WHOOPI_AVALANCHE_FUJI_TESTNET_V0,\n  DEPLOYMENT_WHOOPI_AVALANCHE_MAINNET_V0,\n  DEPLOYMENT_RESOLVER_ETHEREUM_MAINNET_V0,\n  DEPLOYMENT_RESOLVER_POLYGON_MAINNET_V0,\n  DEPLOYMENT_RESOLVER_AVALANCHE_FUJI_TESTNET_V0,\n  DEPLOYMENT_RESOLVER_AVALANCHE_MAINNET_V0,\n];\n\nexport function findDeployments<T extends RenftContractDeployment>(\n  search: Partial<T>\n) {\n  return RENFT_CONTRACT_DEPLOYMENTS.filter(\n    (\n      maybeMatchingDeployment: RenftContractDeployment\n    ): maybeMatchingDeployment is T => {\n      const definedKeys = Object.keys(search);\n      const filterObject = Object.fromEntries(\n        Object.entries(maybeMatchingDeployment).filter(([k]) =>\n          definedKeys.includes(k)\n        )\n      );\n      return isEqual(filterObject, search);\n    }\n  );\n}\n\n// Find a single contract address for a given deployment. Will throw if none-or-many\n// matching deployments are found.\nexport function getContractAddressForDeployment<\n  T extends RenftContractDeployment\n>(search: Omit<Partial<T>, 'contractAddress'>): string {\n  const matchingDeployments = findDeployments<T>(search as Partial<T>);\n\n  if (!matchingDeployments.length)\n    throw new Error(\n      `[getContractAddressForDeployment]: Failed to find a matching deployment for search: ${JSON.stringify(\n        search\n      )}`\n    );\n\n  if (matchingDeployments.length > 1)\n    throw new Error(\n      `[getContractAddressForDeployment]: Found multiple possible deployments for search: ${JSON.stringify(\n        search\n      )}`\n    );\n\n  const [matchingDeployment] = matchingDeployments;\n\n  const { contractAddress } = matchingDeployment!;\n\n  return contractAddress;\n}\n\nexport function getDeploymentAbi<T extends RenftContractType>({\n  contractType,\n  version,\n}: {\n  readonly contractType: T;\n  readonly version: keyof CreateVersionedContractInterfaceResult[T];\n}): ContractInterface {\n  const contractAbiVersions = CONTRACT_ABI_VERSIONS[contractType];\n\n  // @ts-expect-error versioning isn't deterministic at this point because we haven't strictly typed AbiVersions with InterfaceVersions.\n  const maybeContractAbi = contractAbiVersions[version];\n\n  if (!maybeContractAbi)\n    throw new Error(\n      `[getDeploymentAbi]: Unable to find abi for combination \"${String(\n        contractType\n      )}\", \"${String(version)}\".`\n    );\n\n  return maybeContractAbi;\n}\n\nexport function getContractForDeployment<T extends RenftContractType>({\n  contractAddress,\n  contractType,\n  version,\n  signer,\n}: {\n  readonly contractAddress: string;\n  readonly contractType: T;\n  readonly version: keyof CreateVersionedContractInterfaceResult[T];\n  readonly signer: Signer | null;\n}): Contract {\n  const abi = getDeploymentAbi({ contractType, version });\n\n  return new Contract(contractAddress, abi, signer ?? undefined);\n}\n\nexport function getRenftContract<\n  ContractType extends keyof CreateVersionedContractInterfaceResult,\n  Version extends keyof CreateVersionedContractInterfaceResult[ContractType]\n>({\n  deployment,\n  signer,\n}: {\n  readonly deployment: AbstractRenftContractDeployment<ContractType, Version>;\n  readonly signer: Signer | null;\n}) {\n  const {\n    contractAddress,\n    contractType,\n    version,\n    network: { type: networkType },\n  } = deployment;\n\n  const contract = getContractForDeployment({\n    contractAddress,\n    contractType,\n    version,\n    signer,\n  });\n\n  const { [contractType]: contractFunctions } = createInterfaceVersions(\n    contract,\n    networkType\n  );\n\n  return contractFunctions[version];\n}\n","import { RenftContractType } from './types';\n\nimport {\n  NETWORK_AVALANCHE_FUJI_TESTNET,\n  NETWORK_AVALANCHE_MAINNET,\n  NETWORK_ETHEREUM_MAINNET,\n  NETWORK_POLYGON_MAINNET,\n} from './consts';\n\nimport { getContractAddressForDeployment } from './deployments';\n\nexport * from './contracts';\nexport * from './consts';\nexport * from './deployments';\n\nexport * from './types';\nexport * from './interfaces';\nexport * from './utils';\n\nexport const RESOLVER_ADDRESS = getContractAddressForDeployment({\n  network: NETWORK_ETHEREUM_MAINNET,\n  contractType: RenftContractType.RESOLVER,\n});\n\nexport const RESOLVER_POLYGON_ADDRESS = getContractAddressForDeployment({\n  network: NETWORK_POLYGON_MAINNET,\n  contractType: RenftContractType.RESOLVER,\n});\n\nexport const RESOLVER_FUJI_ADDRESS = getContractAddressForDeployment({\n  network: NETWORK_AVALANCHE_FUJI_TESTNET,\n  contractType: RenftContractType.RESOLVER,\n});\n\nexport const RESOLVER_AVALANCHE_ADDRESS = getContractAddressForDeployment({\n  network: NETWORK_AVALANCHE_MAINNET,\n  contractType: RenftContractType.RESOLVER,\n});\n\nexport const AZRAEL_ADDRESS = getContractAddressForDeployment({\n  network: NETWORK_ETHEREUM_MAINNET,\n  contractType: RenftContractType.AZRAEL,\n});\n\nexport const SYLVESTER_ADDRESS = getContractAddressForDeployment({\n  network: NETWORK_ETHEREUM_MAINNET,\n  contractType: RenftContractType.SYLVESTER,\n});\n\nexport const SYLVESTER_POLYGON_ADDRESS = getContractAddressForDeployment({\n  network: NETWORK_POLYGON_MAINNET,\n  contractType: RenftContractType.SYLVESTER,\n});\n\nexport const WHOOPI_FUJI_ADDRESS = getContractAddressForDeployment({\n  network: NETWORK_AVALANCHE_FUJI_TESTNET,\n  contractType: RenftContractType.WHOOPI,\n});\n\nexport const WHOOPI_AVALANCHE_ADDRESS = getContractAddressForDeployment({\n  network: NETWORK_AVALANCHE_MAINNET,\n  contractType: RenftContractType.WHOOPI,\n});\n"],"names":["EVMNetworkType","PaymentToken","NFTStandard","RenftContractType","SylvesterVersion","AzraelVersion","WhoopiVersion","ResolverVersion","NETWORK_ETHEREUM_MAINNET","type","ETHEREUM_MAINNET","chainId","NETWORK_POLYGON_MAINNET","POLYGON_MAINNET","NETWORK_AVALANCHE_FUJI_TESTNET","AVALANCHE_FUJI_TESTNET","NETWORK_AVALANCHE_MAINNET","AVALANCHE_MAINNET","AZRAEL_ABI_VERSIONS","V0","SYLVESTER_ABI_VERSIONS","V1","WHOOPI_ABI_VERSIONS","RESOLVER_ABI_VERSIONS","CONTRACT_ABI_VERSIONS","AZRAEL","SYLVESTER","WHOOPI","RESOLVER","SENTINEL","address","scale","ETHEREUM_MAINNET_PAYMENT_TOKEN_RESOLVERS","WETH","DAI","USDC","USDT","TUSD","ACS","POLYGON_MAINNET_PAYMENT_TOKEN_RESOLVERS","AVALANCHE_FUJI_TESTNET_PAYMENT_TOKEN_RESOLVERS","AVALANCHE_MAINNET_PAYMENT_TOKEN_RESOLVERS","NETWORK_RESOLVERS","runtime","exports","Op","Object","prototype","hasOwn","hasOwnProperty","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","obj","key","value","defineProperty","enumerable","configurable","writable","err","wrap","innerFn","outerFn","self","tryLocsList","generator","create","Generator","context","Context","_invoke","state","method","arg","Error","undefined","done","delegate","delegateResult","maybeInvokeDelegate","ContinueSentinel","sent","_sent","dispatchException","abrupt","record","tryCatch","makeInvokeMethod","fn","call","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","this","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","AsyncIterator","PromiseImpl","previousPromise","callInvokeWithMethodAndArg","resolve","reject","invoke","result","__await","then","unwrapped","error","TypeError","info","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","length","i","doneResult","constructor","displayName","isGeneratorFunction","genFun","ctor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","iter","toString","keys","object","reverse","pop","skipTempReset","prev","charAt","slice","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","catch","thrown","delegateYield","module","regeneratorRuntime","accidentalStrictMode","Function","bytesToNibbles","byteCount","toPaddedHex","number","bitsize","Math","ceil","toUpperCase","padStart","packPrice","price","parts","split","whole","Number","wholeHex","concat","decimal","num","numLen","scaleDecimal","sameLength","a","b","prepareBatch","args","nftAddress","curr","validateSameLength","nft","preparedBatch","tokenID","indices","Array","fill","map","_","sort","comp","items","sortWithIndices","toWhoopiScaledAmount","v","c","t","resolver","parseFixed","String","createAzraelV0LendThunk","contract","amount","maxRentDuration","dailyRentPrice","nftPrice","paymentToken","options","x","lend","createAzraelV0RentThunk","lendingID","rentDuration","rent","createAzraelV0ReturnItThunk","returnIt","createAzraelV0ClaimCollateralThunk","claimCollateral","createAzraelV0StopLendingThunk","stopLending","createSylvesterV0LendThunk","nftStandard","createSylvesterV1LendThunk","willAutoRenew","createSylvesterV0RentThunk","rentAmount","createSylvesterV0ReturnItThunk","rentingID","stopRent","createSylvesterV0ClaimCollateralThunk","claimRent","createSylvesterV0StopLendingThunk","stopLend","createWhoopiV0LendThunk","network","tokenId","upfrontRentFees","revShareBeneficiaries","revSharePortions","maxRentDurations","paymentTokens","allowedRenters","revShares","allowRenters","createWhoopiV0RentThunk","lendingId","rentDurations","createWhoopiV0StopRentThunk","createWhoopiV0StopLendingThunk","createWhoopiV0PayThunk","renterAddress","amountToPay","pay","createInterfaceVersions","createAzraelInterfaceVersionsThunk","createSylvesterInterfaceVersionsThunk","createWhoopiInterfaceVersionsThunk","DEPLOYMENT_AZRAEL_ETHEREUM_MAINNET_V0","contractAddress","contractType","version","DEPLOYMENT_SYLVESTER_ETHEREUM_MAINNET_V0","DEPLOYMENT_SYLVESTER_POLYGON_MAINNET_V0","DEPLOYMENT_SYLVESTER_POLYGON_MAINNET_V1","DEPLOYMENT_WHOOPI_AVALANCHE_FUJI_TESTNET_V0","DEPLOYMENT_WHOOPI_AVALANCHE_MAINNET_V0","DEPLOYMENT_RESOLVER_ETHEREUM_MAINNET_V0","DEPLOYMENT_RESOLVER_POLYGON_MAINNET_V0","DEPLOYMENT_RESOLVER_POLYGON_MAINNET_V0_FOR_DEPLOYMENT_SYLVESTER_POLYGON_MAINNET_V1","DEPLOYMENT_RESOLVER_AVALANCHE_FUJI_TESTNET_V0","DEPLOYMENT_RESOLVER_AVALANCHE_MAINNET_V0","RENFT_CONTRACT_DEPLOYMENTS","findDeployments","search","filter","maybeMatchingDeployment","definedKeys","filterObject","fromEntries","entries","includes","isEqual","getContractAddressForDeployment","matchingDeployments","JSON","stringify","getDeploymentAbi","maybeContractAbi","getContractForDeployment","signer","abi","Contract","RESOLVER_ADDRESS","RESOLVER_POLYGON_ADDRESS","RESOLVER_FUJI_ADDRESS","RESOLVER_AVALANCHE_ADDRESS","AZRAEL_ADDRESS","SYLVESTER_ADDRESS","SYLVESTER_POLYGON_ADDRESS","WHOOPI_FUJI_ADDRESS","WHOOPI_AVALANCHE_ADDRESS","formatFixed","deployment","networkType","maxBinValue","numHex","pow","parseInt","decimalStr","decimalLen","parseFloat"],"mappings":"0EASYA,EAgBAC,EAeAC,EAiBAC,EAeAC,kKA/DAJ,EAAAA,yBAAAA,gEAEVA,oCACAA,wCACAA,mDAYUC,EAAAA,uBAAAA,mDAEVA,mBACAA,iBACAA,mBACAA,mBACAA,mBACAA,kBAQUC,EAAAA,sBAAAA,0CAEVA,sBAeUC,EAAAA,4BAAAA,+CAEVA,wBACAA,kBACAA,uBAGUE,wBAAAA,oCAIAC,wBAAAA,oCAIAF,EAAAA,2BAAAA,sCAEVA,WAGUG,0BAAAA,6DCtDCC,EAA4E,CACvFC,KAAMT,uBAAeU,iBACrBC,QAAS,GAGEC,EAA0E,CACrFH,KAAMT,uBAAea,gBACrBF,QAAS,KAGEG,EAAwF,CACnGL,KAAMT,uBAAee,uBACrBJ,QAAS,OAGEK,EAA8E,CACzFP,KAAMT,uBAAeiB,kBACrBN,QAAS,OAGEO,UACVb,sBAAcc,iwKAGJC,UACVhB,yBAAiBe,i6NACjBf,yBAAiBiB,8lOAGPC,UACVhB,sBAAca,ggRAGJI,UACVhB,wBAAgBY,ueAGNK,UACVrB,0BAAkBsB,QAASP,IAC3Bf,0BAAkBuB,WAAYN,IAC9BjB,0BAAkBwB,QAASL,IAC3BnB,0BAAkByB,UAAWL,KAS1BM,EAAgC,CACpCC,QAAS,GACTC,MAAO,GAmGIC,UACV/B,qBAAa4B,UAAWA,IACxB5B,qBAAagC,MAnG2B,CACzCH,QAAS,6CACTC,MAAO,MAkGN9B,qBAAaiC,KAhG0B,CACxCJ,QAAS,6CACTC,MAAO,MA+FN9B,qBAAakC,MA7F2B,CACzCL,QAAS,6CACTC,MAAO,KA4FN9B,qBAAamC,MA1F2B,CACzCN,QAAS,6CACTC,MAAO,KAyFN9B,qBAAaoC,MAvF2B,CACzCP,QAAS,6CACTC,MAAO,MAsFN9B,qBAAaqC,KAAMT,KAGTU,UACVtC,qBAAa4B,UAAWA,IACxB5B,qBAAagC,MAzF0B,CACxCH,QAAS,6CACTC,MAAO,MAwFN9B,qBAAaiC,KAtFyB,CACvCJ,QAAS,6CACTC,MAAO,MAqFN9B,qBAAakC,MAnF0B,CACxCL,QAAS,6CACTC,MAAO,KAkFN9B,qBAAamC,MAhF0B,CACxCN,QAAS,6CACTC,MAAO,KA+EN9B,qBAAaoC,MA7E0B,CACxCP,QAAS,6CACTC,MAAO,MA4EN9B,qBAAaqC,KAAMT,KAGTW,UACVvC,qBAAa4B,UAAWA,IACxB5B,qBAAagC,MA/EuB,CACrCH,QAAS,6CACTC,MAAO,MA8EN9B,qBAAaiC,KA5EsB,CACpCJ,QAAS,6CACTC,MAAO,MA2EN9B,qBAAakC,MAzEuB,CACrCL,QAAS,6CACTC,MAAO,KAwEN9B,qBAAamC,MAtEuB,CACrCN,QAAS,6CACTC,MAAO,KAqEN9B,qBAAaoC,MAnEuB,CACrCP,QAAS,6CACTC,MAAO,KAkEN9B,qBAAaqC,KAhEsB,CACpCR,QAAS,6CACTC,MAAO,OAiEIU,UACVxC,qBAAa4B,UAAWA,IACxB5B,qBAAagC,MAjE4B,CAC1CH,QAAS,6CACTC,MAAO,MAgEN9B,qBAAaiC,KA9D2B,CACzCJ,QAAS,6CACTC,MAAO,MA6DN9B,qBAAakC,MA3D4B,CAC1CL,QAAS,6CACTC,MAAO,KA0DN9B,qBAAamC,MAxD4B,CAC1CN,QAAS,6CACTC,MAAO,KAuDN9B,qBAAaoC,MArD4B,CAC1CP,QAAS,6CACTC,MAAO,MAoDN9B,qBAAaqC,KAlD2B,CACzCR,QAAS,6CACTC,MAAO,OAoDIW,UACV1C,uBAAeU,kBAAmBsB,IAClChC,uBAAea,iBAAkB0B,IACjCvC,uBAAee,wBAAyByB,IACxCxC,uBAAeiB,mBAAoBwB,sVCpNtC,IAAIE,EAAW,SAAUC,GAGvB,IAAIC,EAAKC,OAAOC,UACZC,EAASH,EAAGI,eAEZC,EAA4B,mBAAXC,OAAwBA,OAAS,GAClDC,EAAiBF,EAAQG,UAAY,aACrCC,EAAsBJ,EAAQK,eAAiB,kBAC/CC,EAAoBN,EAAQO,aAAe,gBAE/C,SAASC,EAAOC,EAAKC,EAAKC,GAOxB,OANAf,OAAOgB,eAAeH,EAAKC,EAAK,CAC9BC,MAAOA,EACPE,YAAY,EACZC,cAAc,EACdC,UAAU,IAELN,EAAIC,GAEb,IAEEF,EAAO,GAAI,IACX,MAAOQ,GACPR,EAAS,SAASC,EAAKC,EAAKC,GAC1B,OAAOF,EAAIC,GAAOC,GAItB,SAASM,EAAKC,EAASC,EAASC,EAAMC,GAEpC,IACIC,EAAY1B,OAAO2B,QADFJ,GAAWA,EAAQtB,qBAAqB2B,EAAYL,EAAUK,GACtC3B,WACzC4B,EAAU,IAAIC,EAAQL,GAAe,IAMzC,OAFAC,EAAUK,QAsMZ,SAA0BT,EAASE,EAAMK,GACvC,IAAIG,EA/KuB,iBAiL3B,OAAO,SAAgBC,EAAQC,GAC7B,GAhLoB,cAgLhBF,EACF,MAAM,IAAIG,MAAM,gCAGlB,GAnLoB,cAmLhBH,EAA6B,CAC/B,GAAe,UAAXC,EACF,MAAMC,EAKR,MAoQG,CAAEnB,WAzfPqB,EAyfyBC,MAAM,GA9P/B,IAHAR,EAAQI,OAASA,EACjBJ,EAAQK,IAAMA,IAED,CACX,IAAII,EAAWT,EAAQS,SACvB,GAAIA,EAAU,CACZ,IAAIC,EAAiBC,EAAoBF,EAAUT,GACnD,GAAIU,EAAgB,CAClB,GAAIA,IAAmBE,EAAkB,SACzC,OAAOF,GAIX,GAAuB,SAAnBV,EAAQI,OAGVJ,EAAQa,KAAOb,EAAQc,MAAQd,EAAQK,SAElC,GAAuB,UAAnBL,EAAQI,OAAoB,CACrC,GAnNqB,mBAmNjBD,EAEF,MADAA,EAjNc,YAkNRH,EAAQK,IAGhBL,EAAQe,kBAAkBf,EAAQK,SAEN,WAAnBL,EAAQI,QACjBJ,EAAQgB,OAAO,SAAUhB,EAAQK,KAGnCF,EA5NkB,YA8NlB,IAAIc,EAASC,EAASzB,EAASE,EAAMK,GACrC,GAAoB,WAAhBiB,EAAOnF,KAAmB,CAO5B,GAJAqE,EAAQH,EAAQQ,KAjOA,YAFK,iBAuOjBS,EAAOZ,MAAQO,EACjB,SAGF,MAAO,CACL1B,MAAO+B,EAAOZ,IACdG,KAAMR,EAAQQ,MAGS,UAAhBS,EAAOnF,OAChBqE,EA/OgB,YAkPhBH,EAAQI,OAAS,QACjBJ,EAAQK,IAAMY,EAAOZ,OA9QPc,CAAiB1B,EAASE,EAAMK,GAE7CH,EAcT,SAASqB,EAASE,EAAIpC,EAAKqB,GACzB,IACE,MAAO,CAAEvE,KAAM,SAAUuE,IAAKe,EAAGC,KAAKrC,EAAKqB,IAC3C,MAAOd,GACP,MAAO,CAAEzD,KAAM,QAASuE,IAAKd,IAhBjCtB,EAAQuB,KAAOA,EAoBf,IAOIoB,EAAmB,GAMvB,SAASb,KACT,SAASuB,KACT,SAASC,KAIT,IAAIC,EAAoB,GACxBA,EAAkB/C,GAAkB,WAClC,OAAOgD,MAGT,IAAIC,EAAWvD,OAAOwD,eAClBC,EAA0BF,GAAYA,EAASA,EAASG,EAAO,MAC/DD,GACAA,IAA4B1D,GAC5BG,EAAOgD,KAAKO,EAAyBnD,KAGvC+C,EAAoBI,GAGtB,IAAIE,EAAKP,EAA2BnD,UAClC2B,EAAU3B,UAAYD,OAAO2B,OAAO0B,GAWtC,SAASO,EAAsB3D,GAC7B,CAAC,OAAQ,QAAS,UAAU4D,SAAQ,SAAS5B,GAC3CrB,EAAOX,EAAWgC,GAAQ,SAASC,GACjC,OAAOoB,KAAKvB,QAAQE,EAAQC,SAkClC,SAAS4B,EAAcpC,EAAWqC,GAgChC,IAAIC,EAgCJV,KAAKvB,QA9BL,SAAiBE,EAAQC,GACvB,SAAS+B,IACP,OAAO,IAAIF,GAAY,SAASG,EAASC,IAnC7C,SAASC,EAAOnC,EAAQC,EAAKgC,EAASC,GACpC,IAAIrB,EAASC,EAASrB,EAAUO,GAASP,EAAWQ,GACpD,GAAoB,UAAhBY,EAAOnF,KAEJ,CACL,IAAI0G,EAASvB,EAAOZ,IAChBnB,EAAQsD,EAAOtD,MACnB,OAAIA,GACiB,iBAAVA,GACPb,EAAOgD,KAAKnC,EAAO,WACdgD,EAAYG,QAAQnD,EAAMuD,SAASC,MAAK,SAASxD,GACtDqD,EAAO,OAAQrD,EAAOmD,EAASC,MAC9B,SAAS/C,GACVgD,EAAO,QAAShD,EAAK8C,EAASC,MAI3BJ,EAAYG,QAAQnD,GAAOwD,MAAK,SAASC,GAI9CH,EAAOtD,MAAQyD,EACfN,EAAQG,MACP,SAASI,GAGV,OAAOL,EAAO,QAASK,EAAOP,EAASC,MAvBzCA,EAAOrB,EAAOZ,KAiCZkC,CAAOnC,EAAQC,EAAKgC,EAASC,MAIjC,OAAOH,EAaLA,EAAkBA,EAAgBO,KAChCN,EAGAA,GACEA,KAkHV,SAASzB,EAAoBF,EAAUT,GACrC,IAAII,EAASK,EAAS/B,SAASsB,EAAQI,QACvC,QA1TEG,IA0TEH,EAAsB,CAKxB,GAFAJ,EAAQS,SAAW,KAEI,UAAnBT,EAAQI,OAAoB,CAE9B,GAAIK,EAAS/B,SAAiB,SAG5BsB,EAAQI,OAAS,SACjBJ,EAAQK,SArUZE,EAsUII,EAAoBF,EAAUT,GAEP,UAAnBA,EAAQI,QAGV,OAAOQ,EAIXZ,EAAQI,OAAS,QACjBJ,EAAQK,IAAM,IAAIwC,UAChB,kDAGJ,OAAOjC,EAGT,IAAIK,EAASC,EAASd,EAAQK,EAAS/B,SAAUsB,EAAQK,KAEzD,GAAoB,UAAhBY,EAAOnF,KAIT,OAHAkE,EAAQI,OAAS,QACjBJ,EAAQK,IAAMY,EAAOZ,IACrBL,EAAQS,SAAW,KACZG,EAGT,IAAIkC,EAAO7B,EAAOZ,IAElB,OAAMyC,EAOFA,EAAKtC,MAGPR,EAAQS,EAASsC,YAAcD,EAAK5D,MAGpCc,EAAQgD,KAAOvC,EAASwC,QAQD,WAAnBjD,EAAQI,SACVJ,EAAQI,OAAS,OACjBJ,EAAQK,SAzXVE,GAmYFP,EAAQS,SAAW,KACZG,GANEkC,GA3BP9C,EAAQI,OAAS,QACjBJ,EAAQK,IAAM,IAAIwC,UAAU,oCAC5B7C,EAAQS,SAAW,KACZG,GAoDX,SAASsC,EAAaC,GACpB,IAAIC,EAAQ,CAAEC,OAAQF,EAAK,IAEvB,KAAKA,IACPC,EAAME,SAAWH,EAAK,IAGpB,KAAKA,IACPC,EAAMG,WAAaJ,EAAK,GACxBC,EAAMI,SAAWL,EAAK,IAGxB1B,KAAKgC,WAAWC,KAAKN,GAGvB,SAASO,EAAcP,GACrB,IAAInC,EAASmC,EAAMQ,YAAc,GACjC3C,EAAOnF,KAAO,gBACPmF,EAAOZ,IACd+C,EAAMQ,WAAa3C,EAGrB,SAAShB,EAAQL,GAIf6B,KAAKgC,WAAa,CAAC,CAAEJ,OAAQ,SAC7BzD,EAAYoC,QAAQkB,EAAczB,MAClCA,KAAKoC,OAAM,GA8Bb,SAAShC,EAAOiC,GACd,GAAIA,EAAU,CACZ,IAAIC,EAAiBD,EAASrF,GAC9B,GAAIsF,EACF,OAAOA,EAAe1C,KAAKyC,GAG7B,GAA6B,mBAAlBA,EAASd,KAClB,OAAOc,EAGT,IAAKE,MAAMF,EAASG,QAAS,CAC3B,IAAIC,GAAK,EAAGlB,EAAO,SAASA,IAC1B,OAASkB,EAAIJ,EAASG,QACpB,GAAI5F,EAAOgD,KAAKyC,EAAUI,GAGxB,OAFAlB,EAAK9D,MAAQ4E,EAASI,GACtBlB,EAAKxC,MAAO,EACLwC,EAOX,OAHAA,EAAK9D,WAzeTqB,EA0eIyC,EAAKxC,MAAO,EAELwC,GAGT,OAAOA,EAAKA,KAAOA,GAKvB,MAAO,CAAEA,KAAMmB,GAIjB,SAASA,IACP,MAAO,CAAEjF,WAzfPqB,EAyfyBC,MAAM,GA+MnC,OA5mBAc,EAAkBlD,UAAY0D,EAAGsC,YAAc7C,EAC/CA,EAA2B6C,YAAc9C,EACzCA,EAAkB+C,YAActF,EAC9BwC,EACA1C,EACA,qBAaFZ,EAAQqG,oBAAsB,SAASC,GACrC,IAAIC,EAAyB,mBAAXD,GAAyBA,EAAOH,YAClD,QAAOI,IACHA,IAASlD,GAG2B,uBAAnCkD,EAAKH,aAAeG,EAAKC,QAIhCxG,EAAQyG,KAAO,SAASH,GAQtB,OAPIpG,OAAOwG,eACTxG,OAAOwG,eAAeJ,EAAQhD,IAE9BgD,EAAOK,UAAYrD,EACnBxC,EAAOwF,EAAQ1F,EAAmB,sBAEpC0F,EAAOnG,UAAYD,OAAO2B,OAAOgC,GAC1ByC,GAOTtG,EAAQ4G,MAAQ,SAASxE,GACvB,MAAO,CAAEoC,QAASpC,IAsEpB0B,EAAsBE,EAAc7D,WACpC6D,EAAc7D,UAAUO,GAAuB,WAC7C,OAAO8C,MAETxD,EAAQgE,cAAgBA,EAKxBhE,EAAQ6G,MAAQ,SAASrF,EAASC,EAASC,EAAMC,EAAasC,QACxC,IAAhBA,IAAwBA,EAAc6C,SAE1C,IAAIC,EAAO,IAAI/C,EACbzC,EAAKC,EAASC,EAASC,EAAMC,GAC7BsC,GAGF,OAAOjE,EAAQqG,oBAAoB5E,GAC/BsF,EACAA,EAAKhC,OAAON,MAAK,SAASF,GACxB,OAAOA,EAAOhC,KAAOgC,EAAOtD,MAAQ8F,EAAKhC,WAuKjDjB,EAAsBD,GAEtB/C,EAAO+C,EAAIjD,EAAmB,aAO9BiD,EAAGrD,GAAkB,WACnB,OAAOgD,MAGTK,EAAGmD,SAAW,WACZ,MAAO,sBAkCThH,EAAQiH,KAAO,SAASC,GACtB,IAAID,EAAO,GACX,IAAK,IAAIjG,KAAOkG,EACdD,EAAKxB,KAAKzE,GAMZ,OAJAiG,EAAKE,UAIE,SAASpC,IACd,KAAOkC,EAAKjB,QAAQ,CAClB,IAAIhF,EAAMiG,EAAKG,MACf,GAAIpG,KAAOkG,EAGT,OAFAnC,EAAK9D,MAAQD,EACb+D,EAAKxC,MAAO,EACLwC,EAQX,OADAA,EAAKxC,MAAO,EACLwC,IAsCX/E,EAAQ4D,OAASA,EAMjB5B,EAAQ7B,UAAY,CAClBgG,YAAanE,EAEb4D,MAAO,SAASyB,GAcd,GAbA7D,KAAK8D,KAAO,EACZ9D,KAAKuB,KAAO,EAGZvB,KAAKZ,KAAOY,KAAKX,WApgBjBP,EAqgBAkB,KAAKjB,MAAO,EACZiB,KAAKhB,SAAW,KAEhBgB,KAAKrB,OAAS,OACdqB,KAAKpB,SAzgBLE,EA2gBAkB,KAAKgC,WAAWzB,QAAQ2B,IAEnB2B,EACH,IAAK,IAAIb,KAAQhD,KAEQ,MAAnBgD,EAAKe,OAAO,IACZnH,EAAOgD,KAAKI,KAAMgD,KACjBT,OAAOS,EAAKgB,MAAM,MACrBhE,KAAKgD,QAnhBXlE,IAyhBFmF,KAAM,WACJjE,KAAKjB,MAAO,EAEZ,IACImF,EADYlE,KAAKgC,WAAW,GACLG,WAC3B,GAAwB,UAApB+B,EAAW7J,KACb,MAAM6J,EAAWtF,IAGnB,OAAOoB,KAAKmE,MAGd7E,kBAAmB,SAAS8E,GAC1B,GAAIpE,KAAKjB,KACP,MAAMqF,EAGR,IAAI7F,EAAUyB,KACd,SAASqE,EAAOC,EAAKC,GAYnB,OAXA/E,EAAOnF,KAAO,QACdmF,EAAOZ,IAAMwF,EACb7F,EAAQgD,KAAO+C,EAEXC,IAGFhG,EAAQI,OAAS,OACjBJ,EAAQK,SApjBZE,KAujBYyF,EAGZ,IAAK,IAAI9B,EAAIzC,KAAKgC,WAAWQ,OAAS,EAAGC,GAAK,IAAKA,EAAG,CACpD,IAAId,EAAQ3B,KAAKgC,WAAWS,GACxBjD,EAASmC,EAAMQ,WAEnB,GAAqB,SAAjBR,EAAMC,OAIR,OAAOyC,EAAO,OAGhB,GAAI1C,EAAMC,QAAU5B,KAAK8D,KAAM,CAC7B,IAAIU,EAAW5H,EAAOgD,KAAK+B,EAAO,YAC9B8C,EAAa7H,EAAOgD,KAAK+B,EAAO,cAEpC,GAAI6C,GAAYC,EAAY,CAC1B,GAAIzE,KAAK8D,KAAOnC,EAAME,SACpB,OAAOwC,EAAO1C,EAAME,UAAU,GACzB,GAAI7B,KAAK8D,KAAOnC,EAAMG,WAC3B,OAAOuC,EAAO1C,EAAMG,iBAGjB,GAAI0C,GACT,GAAIxE,KAAK8D,KAAOnC,EAAME,SACpB,OAAOwC,EAAO1C,EAAME,UAAU,OAG3B,CAAA,IAAI4C,EAMT,MAAM,IAAI5F,MAAM,0CALhB,GAAImB,KAAK8D,KAAOnC,EAAMG,WACpB,OAAOuC,EAAO1C,EAAMG,gBAU9BvC,OAAQ,SAASlF,EAAMuE,GACrB,IAAK,IAAI6D,EAAIzC,KAAKgC,WAAWQ,OAAS,EAAGC,GAAK,IAAKA,EAAG,CACpD,IAAId,EAAQ3B,KAAKgC,WAAWS,GAC5B,GAAId,EAAMC,QAAU5B,KAAK8D,MACrBlH,EAAOgD,KAAK+B,EAAO,eACnB3B,KAAK8D,KAAOnC,EAAMG,WAAY,CAChC,IAAI4C,EAAe/C,EACnB,OAIA+C,IACU,UAATrK,GACS,aAATA,IACDqK,EAAa9C,QAAUhD,GACvBA,GAAO8F,EAAa5C,aAGtB4C,EAAe,MAGjB,IAAIlF,EAASkF,EAAeA,EAAavC,WAAa,GAItD,OAHA3C,EAAOnF,KAAOA,EACdmF,EAAOZ,IAAMA,EAET8F,GACF1E,KAAKrB,OAAS,OACdqB,KAAKuB,KAAOmD,EAAa5C,WAClB3C,GAGFa,KAAK2E,SAASnF,IAGvBmF,SAAU,SAASnF,EAAQuC,GACzB,GAAoB,UAAhBvC,EAAOnF,KACT,MAAMmF,EAAOZ,IAcf,MAXoB,UAAhBY,EAAOnF,MACS,aAAhBmF,EAAOnF,KACT2F,KAAKuB,KAAO/B,EAAOZ,IACM,WAAhBY,EAAOnF,MAChB2F,KAAKmE,KAAOnE,KAAKpB,IAAMY,EAAOZ,IAC9BoB,KAAKrB,OAAS,SACdqB,KAAKuB,KAAO,OACa,WAAhB/B,EAAOnF,MAAqB0H,IACrC/B,KAAKuB,KAAOQ,GAGP5C,GAGTyF,OAAQ,SAAS9C,GACf,IAAK,IAAIW,EAAIzC,KAAKgC,WAAWQ,OAAS,EAAGC,GAAK,IAAKA,EAAG,CACpD,IAAId,EAAQ3B,KAAKgC,WAAWS,GAC5B,GAAId,EAAMG,aAAeA,EAGvB,OAFA9B,KAAK2E,SAAShD,EAAMQ,WAAYR,EAAMI,UACtCG,EAAcP,GACPxC,IAKb0F,MAAS,SAASjD,GAChB,IAAK,IAAIa,EAAIzC,KAAKgC,WAAWQ,OAAS,EAAGC,GAAK,IAAKA,EAAG,CACpD,IAAId,EAAQ3B,KAAKgC,WAAWS,GAC5B,GAAId,EAAMC,SAAWA,EAAQ,CAC3B,IAAIpC,EAASmC,EAAMQ,WACnB,GAAoB,UAAhB3C,EAAOnF,KAAkB,CAC3B,IAAIyK,EAAStF,EAAOZ,IACpBsD,EAAcP,GAEhB,OAAOmD,GAMX,MAAM,IAAIjG,MAAM,0BAGlBkG,cAAe,SAAS1C,EAAUf,EAAYE,GAa5C,OAZAxB,KAAKhB,SAAW,CACd/B,SAAUmD,EAAOiC,GACjBf,WAAYA,EACZE,QAASA,GAGS,SAAhBxB,KAAKrB,SAGPqB,KAAKpB,SA7rBPE,GAgsBOK,IAQJ3C,GAOsBwI,EAAOxI,SAGtC,IACEyI,mBAAqB1I,EACrB,MAAO2I,GAUPC,SAAS,IAAK,yBAAdA,CAAwC5I,gCC/sB7B6I,EAAiB,SAACC,MACL,iBAAbA,EAAuB,MAAM,IAAIxG,MAAM,6BAE9CwG,EAAY,EAAG,MAAM,IAAIxG,MAAM,4BAEhB,EAAZwG,GAgBIC,EAAc,SAACC,EAAgBC,MAEtCA,EAvCoB,GAwCtB,MAAM,IAAI3G,iBACG2G,gCAGXD,EAAS,EAAG,MAAM,IAAI1G,MAAM,qCAG1BwG,EAAYI,KAAKC,KAAKF,EFYE,SEN5B,MACCD,IAAW,GACT/B,SAAS,IACTmC,cAEAC,SAASR,EAAeC,GAAY,MAsB9BQ,EAAY,SAACC,MACpBA,EFvBmB,UEuBA,MAAM,IAAIjH,8CAE3BkH,EAAQD,EAAMtC,WAAWwC,MAAM,KAC/BC,EAAQC,OAAOH,EAAM,OACvBE,EAAQ,EAAG,MAAM,IAAIpH,MAAM,iCACzBsH,EAAWb,EAAYY,OAAOD,GArFjB,OAuFE,IAAjBF,EAAMvD,OAAc,OAAO2D,EAASC,OAAO,WAC1B,IAAjBL,EAAMvD,OAAc,MAAM,IAAI3D,MAAM,2BAEpCwH,EA7Be,SAACC,WACdC,EAASD,EAAI9D,OAEVC,EAAI,EAAGA,EADD,EACc8D,EAAQ9D,IACnC6D,GAAY,WAEPJ,OAAOI,GAuBAE,CAAaT,EAAM,GAAG/B,MAAM,EAAG,WAEtCmC,EAASC,OAAOd,EAAYY,OAAOG,GA5FvB,IA4F+CrC,MAAM,KAGpEyC,EAAa,SAAIC,EAAQC,UAAWD,EAAElE,SAAWmE,EAAEnE,QA8F5CoE,EAAe,SAACC,MACvBA,EAAKC,WAAWtE,QAAU,EAAG,OAAOqE,GA7Ff,sCAAIA,2BAAAA,0BACzB/C,EAAY+C,EAAK,SACFA,iBAAM,KAAdE,UACJA,OACAN,EAAW3C,EAAMiD,GAAO,MAAM,IAAIlI,MAAM,wBAC7CiF,EAAOiD,IAyFTC,CAAmBH,OAKEI,EAJjBC,EAA8B,CAAEJ,WAAY,GAAIK,QAAS,IAcvDC,GAVeH,EAUOJ,EAAKC,WARf,IAAIO,MAAMJ,EAAIzE,QAAQ8E,KAAK,GAAGC,KAAI,SAACC,EAAG/E,UAAMA,KAC7CgF,MAAK,SAACf,EAAGC,UAFX,SAACD,EAAWC,UAAeD,EAAIC,GAAK,EAAID,EAAIC,EAAI,EAAI,EAEnCe,CAAKT,EAAIP,GAAIO,EAAIN,eASjDjK,OAAO+G,KAAKoD,GAAMtG,SAAQ,SAAA/C,GAExB0J,EAAc1J,GARQ,SAACmK,EAAcP,UAC9BA,EAAQG,KAAI,SAAA9E,UAAKkF,EAAMlF,MAOTmF,CAAgBf,EAAKrJ,GAAM4J,MAG3CF,GAMIW,EAAuB,SAClCC,EACAC,EACAC,MAEIA,IAAMnO,qBAAa4B,SACrB,MAAM,IAAI2F,UAAU,4DAET6G,EAAa3L,EAAjByL,UAEFG,aAAWC,OAAOL,GAAIG,EAASD,GAAGrM,QCpO9ByM,EAA0B,SACrCC,qCACyB,WACzBvB,EACAK,EACAmB,EACAC,EACAC,EACAC,EACAC,EACAC,+EAEM9B,EAAOD,EAAa,CACxBE,WAAYA,EAAWS,IAAIY,QAC3BhB,QAASA,EAAQI,IAAIY,QACrBG,OAAQA,EAAOf,IAAIrB,QACnBqC,gBAAiBA,EAAgBhB,IAAIrB,QACrCsC,eAAgBA,EAAejB,KAAI,SAAAqB,UAAK/C,EAAUK,OAAO0C,GAAGpF,eAC5DiF,SAAUA,EAASlB,KAAI,SAAAqB,UAAK/C,EAAUK,OAAO0C,GAAGpF,eAChDkF,aAAAA,aAEWL,EAASQ,KACpBhC,EAAKC,WACLD,EAAKM,QACLN,EAAKyB,OACLzB,EAAK0B,gBACL1B,EAAK2B,eACL3B,EAAK4B,SACL5B,EAAK6B,mBACLC,EAAAA,EAAW,4JAIFG,EAA0B,SACrCT,qCACyB,WACzBvB,EACAK,EACA4B,EACAC,EACAL,+EAEM9B,EAAOD,EAAa,CACxBE,WAAYA,EAAWS,IAAIY,QAC3BhB,QAASA,EAAQI,IAAIY,QACrBY,UAAWA,EAAUxB,IAAIY,QACzBa,aAAcA,EAAazB,IAAIrB,mBAEpBmC,EAASY,KACpBpC,EAAKC,WACLD,EAAKM,QACLN,EAAKkC,UACLlC,EAAKmC,mBACLL,EAAAA,EAAW,sJAIFO,EAA8B,SACzCb,qCAC6B,WAC7BvB,EACAK,EACA4B,EACAJ,+EAEM9B,EAAOD,EAAa,CACxBE,WAAYA,EAAWS,IAAIY,QAC3BhB,QAASA,EAAQI,IAAIY,QACrBY,UAAWA,EAAUxB,IAAIY,mBAEdE,EAASc,SACpBtC,EAAKC,WACLD,EAAKM,QACLN,EAAKkC,gBACLJ,EAAAA,EAAW,oJAIFS,EAAqC,SAChDf,qCACoC,WACpCvB,EACAK,EACA4B,EACAJ,+EAEM9B,EAAOD,EAAa,CACxBE,WAAYA,EAAWS,IAAIY,QAC3BhB,QAASA,EAAQI,IAAIY,QACrBY,UAAWA,EAAUxB,IAAIY,mBAEdE,EAASgB,gBACpBxC,EAAKC,WACLD,EAAKM,QACLN,EAAKkC,gBACLJ,EAAAA,EAAW,oJAIFW,EAAiC,SAC5CjB,qCACgC,WAChCvB,EACAK,EACA4B,EACAJ,+EAEM9B,EAAOD,EAAa,CACxBE,WAAYA,EAAWS,IAAIY,QAC3BhB,QAASA,EAAQI,IAAIY,QACrBY,UAAWA,EAAUxB,IAAIY,mBAEdE,EAASkB,YACpB1C,EAAKC,WACLD,EAAKM,QACLN,EAAKkC,gBACLJ,EAAAA,EAAW,oJCpHFa,EAA6B,SACxCnB,qCAC4B,WAC5BoB,EACA3C,EACAK,EACAmB,EACAC,EACAC,EACAE,EACAC,+EAEM9B,EAAOD,EAAa,CACxB6C,YAAAA,EACA3C,WAAYA,EAAWS,IAAIY,QAC3BhB,QAASA,EAAQI,IAAIY,QACrBG,OAAQA,EAAOf,IAAIrB,QACnBqC,gBAAiBA,EAAgBhB,IAAIrB,QACrCsC,eAAgBA,EAAejB,KAAI,SAAAqB,UAAK/C,EAAUK,OAAO0C,GAAGpF,eAC5DkF,aAAAA,aAEWL,EAASQ,KACpBhC,EAAK4C,YACL5C,EAAKC,WACLD,EAAKM,QACLN,EAAKyB,OACLzB,EAAK0B,gBACL1B,EAAK2B,eACL3B,EAAK6B,mBACLC,EAAAA,EAAW,4JAIFe,EAA6B,SACxCrB,qCAC4B,WAC5BoB,EACA3C,EACAK,EACAmB,EACAC,EACAC,EACAE,EACAiB,EACAhB,+EAEM9B,EAAOD,EAAa,CACxB6C,YAAAA,EACA3C,WAAYA,EAAWS,IAAIY,QAC3BhB,QAASA,EAAQI,IAAIY,QACrBG,OAAQA,EAAOf,IAAIrB,QACnBqC,gBAAiBA,EAAgBhB,IAAIrB,QACrCsC,eAAgBA,EAAejB,KAAI,SAAAqB,UAAK/C,EAAUK,OAAO0C,GAAGpF,eAC5DkF,aAAAA,EACAiB,cAAeA,EAAcpC,KAAI,SAAAqB,UAAMA,EAAI,EAAI,gBAEpCP,EAASQ,KACpBhC,EAAK4C,YACL5C,EAAKC,WACLD,EAAKM,QACLN,EAAKyB,OACLzB,EAAK0B,gBACL1B,EAAK2B,eACL3B,EAAK6B,aACL7B,EAAK8C,oBACLhB,EAAAA,EAAW,8JAIFiB,EAA6B,SACxCvB,qCAC4B,WAC5BoB,EACA3C,EACAK,EACA4B,EACAC,EACAa,EACAlB,+EAEM9B,EAAOD,EAAa,CACxB6C,YAAaA,EAAYlC,IAAIrB,QAC7BY,WAAYA,EAAWS,IAAIY,QAC3BhB,QAASA,EAAQI,IAAIY,QACrBY,UAAWA,EAAUxB,IAAIY,QACzBa,aAAcA,EAAazB,IAAIrB,QAC/B2D,WAAYA,EAAWtC,IAAIY,mBAEhBE,EAASY,KACpBpC,EAAK4C,YACL5C,EAAKC,WACLD,EAAKM,QACLN,EAAKkC,UACLlC,EAAKmC,aACLnC,EAAKgD,iBACLlB,EAAAA,EAAW,0JAIFmB,EAAiC,SAC5CzB,qCACgC,WAChCoB,EACA3C,EACAK,EACA4B,EACAgB,EACApB,+EAEM9B,EAAOD,EAAa,CACxB6C,YAAaA,EAAYlC,IAAIrB,QAC7BY,WAAYA,EAAWS,IAAIY,QAC3BhB,QAASA,EAAQI,IAAIY,QACrBY,UAAWA,EAAUxB,IAAIY,QACzB4B,UAAWA,EAAUxC,IAAIY,mBAEdE,EAAS2B,SACpBnD,EAAK4C,YACL5C,EAAKC,WACLD,EAAKM,QACLN,EAAKkC,UACLlC,EAAKkD,gBACLpB,EAAAA,EAAW,wJAIFsB,EAAwC,SACnD5B,qCACuC,WACvCoB,EACA3C,EACAK,EACA4B,EACAgB,EACApB,+EAEM9B,EAAOD,EAAa,CACxB6C,YAAaA,EAAYlC,IAAIrB,QAC7BY,WAAYA,EAAWS,IAAIY,QAC3BhB,QAASA,EAAQI,IAAIY,QACrBY,UAAWA,EAAUxB,IAAIY,QACzB4B,UAAWA,EAAUxC,IAAIY,mBAEdE,EAAS6B,UACpBrD,EAAK4C,YACL5C,EAAKC,WACLD,EAAKM,QACLN,EAAKkC,UACLlC,EAAKkD,gBACLpB,EAAAA,EAAW,wJAIFwB,GAAoC,SAC/C9B,qCACmC,WACnCoB,EACA3C,EACAK,EACA4B,EACAJ,+EAEM9B,EAAOD,EAAa,CACxB6C,YAAaA,EAAYlC,IAAIrB,QAC7BY,WAAYA,EAAWS,IAAIY,QAC3BhB,QAASA,EAAQI,IAAIY,QACrBY,UAAWA,EAAUxB,IAAIY,mBAEdE,EAAS+B,SACpBvD,EAAK4C,YACL5C,EAAKC,WACLD,EAAKM,QACLN,EAAKkC,gBACLJ,EAAAA,EAAW,sJC7KF0B,GAA0B,SACrChC,EACAiC,qCACyB,WACzBxD,EACAyD,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAlC,sFAEImC,EAAY,GAEPrI,EAAI,EAAGA,EAAIgI,EAAsBjI,OAAQC,IAChDqI,EAAU7I,KAAK,CAACwI,EAAsBhI,GAAIiI,EAAiBjI,QAGzDsI,EAAe,GAEfF,MACOpI,EAAI,EAAGA,EAAIoI,EAAerI,OAAQC,IACzCsI,EAAa9I,KAAK,CAAC4I,EAAepI,cAG3BA,EAAI,EAAGA,EAAI8H,EAAQ/H,OAAQC,IAMlCsI,EAAa9I,KAAK,CAAC,qBAGVoG,EAASQ,KACpB,CAAC/B,EAAYyD,EAASlD,MAAMkD,EAAQ/H,QAAQ8E,KAAK,eACjDkD,EAAgBjD,KAAI,SAACqB,EAAGnG,UACtBoF,EAAqBe,EAAG0B,EAASM,EAAcnI,UAC5C,GACLsI,EACAD,EACAH,EACAC,QACAjC,EAAAA,EAAW,8JAIFqC,GAA0B,SACrC3C,qCACyB,WACzBvB,EACAyD,EACAU,EACAC,EACAvC,kFAEaN,EAASY,KACpB,CAACnC,EAAYyD,EAASU,GACtBC,QACAvC,EAAAA,EAAW,sJAIFwC,GAA8B,SACzC9C,qCAC6B,WAC7BvB,EACAyD,EACAU,EACAtC,kFAEaN,EAAS2B,SAASlD,EAAYyD,EAASU,QAAWtC,EAAAA,EAAW,oJAG/DyC,GAAiC,SAC5C/C,qCACgC,WAChCvB,EACAyD,EACAU,EACAtC,kFAEaN,EAAS+B,SACpB,CAACtD,EAAYyD,EAASU,SACtBtC,EAAAA,EAAW,oJAIF0C,GAAyB,SACpChD,qCACwB,WACxBvB,EACAyD,EACAU,EACAK,EACAC,EACA5C,kFAEaN,EAASmD,IACpB,CAAC1E,EAAYyD,EAASU,GACtBK,EACAC,QACA5C,EAAAA,EAAW,wJCjCF8C,GAA0B,SACrCpD,EACAiC,wBAECvQ,0BAAkBsB,QArDsB,SACzCgN,sBAECpO,sBAAcc,IAAK,CAClB8N,KAAMT,EAAwBC,GAC9BY,KAAMH,EAAwBT,GAC9Bc,SAAUD,EAA4Bb,GACtCgB,gBAAiBD,EAAmCf,GACpDkB,YAAaD,EAA+BjB,MA6ClBqD,CAAmCrD,KAC9DtO,0BAAkBuB,WA1CyB,SAC5C+M,sBAECrO,yBAAiBe,IAAK,CACrB8N,KAAMW,EAA2BnB,GACjCY,KAAMW,EAA2BvB,GACjCc,SAAUW,EAA+BzB,GACzCgB,gBAAiBY,EAAsC5B,GACvDkB,YAAaY,GAAkC9B,MAEhDrO,yBAAiBiB,IAAK,CACrB4N,KAAMa,EAA2BrB,GACjCY,KAAMW,EAA2BvB,GACjCc,SAAUW,EAA+BzB,GACzCgB,gBAAiBY,EAAsC5B,GACvDkB,YAAaY,GAAkC9B,MA2BlBsD,CAC7BtD,KAEDtO,0BAAkBwB,QA1BsB,SACzC8M,EACAiC,sBAECpQ,sBAAca,IAAK,CAClB8N,KAAMwB,GAAwBhC,EAAUiC,GACxCrB,KAAM+B,GAAwB3C,GAC9B2B,SAAUmB,GAA4B9C,GACtCkB,YAAa6B,GAA+B/C,GAC5CmD,IAAKH,GAAuBhD,MAiBFuD,CAC1BvD,EACAiC,KAEDvQ,0BAAkByB,kBAflBrB,wBAAgBY,IAAK,SCzDX8Q,GAAwC,CACnDC,gBAAiB,6CACjBxB,QAASlQ,EACT2R,aAAchS,0BAAkBsB,OAChC2Q,QAAS/R,sBAAcc,IAGZkR,GAA2C,CACtDH,gBAAiB,6CACjBxB,QAASlQ,EACT2R,aAAchS,0BAAkBuB,UAChC0Q,QAAShS,yBAAiBe,IAGfmR,GAA0C,CACrDJ,gBAAiB,6CACjBxB,QAAS9P,EACTuR,aAAchS,0BAAkBuB,UAChC0Q,QAAShS,yBAAiBe,IAGfoR,GAA0C,CACrDL,gBAAiB,6CACjBxB,QAAS9P,EACTuR,aAAchS,0BAAkBuB,UAChC0Q,QAAShS,yBAAiBiB,IAGfmR,GAA8C,CACzDN,gBAAiB,6CACjBxB,QAAS5P,EACTqR,aAAchS,0BAAkBwB,OAChCyQ,QAAS9R,sBAAca,IAGZsR,GAAyC,CACpDP,gBAAiB,6CACjBxB,QAAS1P,EACTmR,aAAchS,0BAAkBwB,OAChCyQ,QAAS9R,sBAAca,IAGZuR,GAA0C,CACrDR,gBAAiB,6CACjBxB,QAASlQ,EACT2R,aAAchS,0BAAkByB,SAChCwQ,QAAS7R,wBAAgBY,IAGdwR,GAAyC,CACpDT,gBAAiB,6CACjBxB,QAAS9P,EACTuR,aAAchS,0BAAkByB,SAChCwQ,QAAS7R,wBAAgBY,IAIdyR,GAAqF,CAChGV,gBAAiB,6CACjBxB,QAAS9P,EACTuR,aAAchS,0BAAkByB,SAChCwQ,QAAS7R,wBAAgBY,IAGd0R,GAAgD,CAC3DX,gBAAiB,6CACjBxB,QAAS5P,EACTqR,aAAchS,0BAAkByB,SAChCwQ,QAAS7R,wBAAgBY,IAGd2R,GAA2C,CACtDZ,gBAAiB,6CACjBxB,QAAS1P,EACTmR,aAAchS,0BAAkByB,SAChCwQ,QAAS7R,wBAAgBY,IAGd4R,GAAuD,CAClEd,GACAI,GACAC,GACAE,GACAC,GACAC,GACAC,GACAE,GACAC,aAGcE,GACdC,UAEOF,GAA2BG,QAChC,SACEC,OAEMC,EAActQ,OAAO+G,KAAKoJ,GAC1BI,EAAevQ,OAAOwQ,YAC1BxQ,OAAOyQ,QAAQJ,GAAyBD,QAAO,mBAC7CE,EAAYI,0BAGTC,EAAQJ,EAAcJ,eAOnBS,GAEdT,OACMU,EAAsBX,GAAmBC,OAE1CU,EAAoB/K,OACvB,MAAM,IAAI3D,6FAC+E2O,KAAKC,UAC1FZ,OAIFU,EAAoB/K,OAAS,EAC/B,MAAM,IAAI3D,4FAC8E2O,KAAKC,UACzFZ,WAIuBU,KAErBzB,yBAKM4B,UACd3B,IAAAA,aACAC,IAAAA,QAQM2B,EAHsBvS,EAAsB2Q,GAGLC,OAExC2B,EACH,MAAM,IAAI9O,iEACmDsJ,OACzD4D,UACM5D,OAAO6D,gBAGZ2B,WAGOC,UACd9B,IAAAA,gBAGA+B,IAAAA,OAOMC,EAAMJ,GAAiB,CAAE3B,eAT/BA,aAS6CC,UAR7CA,iBAUO,IAAI+B,WAASjC,EAAiBgC,QAAKD,EAAAA,OAAU/O,OChLzCkP,GAAmBV,GAAgC,CAC9DhD,QAASlQ,EACT2R,aAAchS,0BAAkByB,WAGrByS,GAA2BX,GAAgC,CACtEhD,QAAS9P,EACTuR,aAAchS,0BAAkByB,WAGrB0S,GAAwBZ,GAAgC,CACnEhD,QAAS5P,EACTqR,aAAchS,0BAAkByB,WAGrB2S,GAA6Bb,GAAgC,CACxEhD,QAAS1P,EACTmR,aAAchS,0BAAkByB,WAGrB4S,GAAiBd,GAAgC,CAC5DhD,QAASlQ,EACT2R,aAAchS,0BAAkBsB,SAGrBgT,GAAoBf,GAAgC,CAC/DhD,QAASlQ,EACT2R,aAAchS,0BAAkBuB,YAGrBgT,GAA4BhB,GAAgC,CACvEhD,QAAS9P,EACTuR,aAAchS,0BAAkBuB,YAGrBiT,GAAsBjB,GAAgC,CACjEhD,QAAS5P,EACTqR,aAAchS,0BAAkBwB,SAGrBiT,GAA2BlB,GAAgC,CACtEhD,QAAS1P,EACTmR,aAAchS,0BAAkBwB,u3BRQT,iNACO,yqCEiLM,SACpCuM,EACAC,EACAC,MAEIA,IAAMnO,qBAAa4B,SACrB,MAAM,IAAI2F,UAAU,+DAIfqN,cAAY3G,EAFOxL,EAAjByL,GAEsBC,GAAGrM,4JKvDlC+S,IAAAA,WAQE3C,EAGE2C,EAHF3C,aACAC,EAEE0C,EAFF1C,QACiB2C,EACfD,EADFpE,QAAWjQ,KAGPgO,EAAWuF,GAAyB,CACxC9B,gBAHE4C,EAJF5C,gBAQAC,aAAAA,EACAC,QAAAA,EACA6B,SAhBFA,gBAmB8CpC,GAC5CpD,EACAsG,GAFO5C,GAKgBC,wHLrFA,SAAClG,OAvBMP,EAC1BF,EACAuJ,EAuBAC,GAzB0BtJ,EAyBQW,OAAOJ,GAxBzCT,EAAYI,KAAKC,KAAKF,GACtBoJ,EAAcnJ,KAAKqJ,IAAI,EA3GT,IA2GuB,EAEvCvJ,EAAS,IAAGA,EAASqJ,EAAcrJ,EAAS,GAE9C,MACCA,IAAW,GACT/B,SAAS,IACTmC,cACAC,SAAqB,EAAZP,EAAe,MAeyCrB,MACpE,GAEEiC,EAAQ8I,SAASF,EAAO7K,MAAM,EAAG,GAAI,IACrCqC,EAAU0I,SAASF,EAAO7K,MAAM,GAAI,IACpCiC,EAAQ,OAAMA,EAAQ,MACtBI,EAAU,OAAMA,EAAU,cAE1B2I,EAAa3I,EAAQ7C,WACnByL,EAAaD,EAAWxM,OAErBC,EAAI,EAAGA,EADD,EACcwM,EAAYxM,IACvCuM,EAAa,IAAMA,SAGdE,WAAcjJ,MAAS+I"}